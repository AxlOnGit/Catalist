<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIADzBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEiElEQVRYR6WXTWhc
        VRTHO8kECsnCTUIWgi4qDIlgEdEKSlptF4WUdJJOQsGSCi1asOjCUoSCSJXqwlUFhSwUFKaZD8ZgpIsU
        msgsFKpkIIQsAnagUElcVBiCJpPE3//OyWPezJv3Mu0fLufccz/Ouefj3vdiByIwNDQU7+3tvQHbT/st
        FosV19bWlhYWFqpuwhMi1IBUKtWzu7v7PUpPm8gBWQXZPdgiLZ/NZhfdwGOgpQEo70dRFkWvmagJjBe3
        trZOzczMPDKRD2cA5B3aYdoj5l/M5/PzGttDoAGjo6OJzs7OAmyiJgnELUJxLigUCltfX9/XsBdQusoh
        PmPuD0FzmwwYHx8/srOzU2CRYh4INv08l8t9ZN0mcPBrrL9u3bcJ0XfGN6HDqAPKT6N8LkS5TnApQvkh
        1n9sXeFZo4HwDCDm71rMe0zUBMavcJpvrNsKR2nxGuvWPGNsE8bGxo46A1Audylm3sIWuDoxMRF6IvCC
        UQcOFDh/cnLyIGPpDlwmxddq4nAoNITotirEREGoGHXAA4EGbGxsvAeJx5wbOjrm1HEjdWDxX5CexrAg
        LyI7STh8ygQOdIGxKes6MP9fyAryFWiJvipjCnrPVQGLziBIw9YbsVKtVk9g3GGaSrLRwFlKK1lfWipf
        5t5lrzAPecCAlMsBsjpH55KTAvji5ubmq4VC4QEXxyyii7URH4at1h0eQ7nU5jqtf2B5efmPgYGBf2Ar
        3d3dyenpac+9jC0ODg7+B3u8JvHwIvJ4IpF42IZyeez6+vr6++VyeSf0LWgEkbqJEiVPI3QVP1VjPaxw
        ylNm1BF4lWOJNs/BVzVBaMsAexnTbKo7PgxKtmMkqZI4FL6bMApKOMJzTjlioiDsW7ng5cB+USqVquTK
        Q7zwlol84J5I4eIl60aiLQ8IXEJ6nrO1XjMwLJ1MJp+2biTaMkDKcf9tlLR8L5R08Xh8bmRkpDEpA7Fv
        A1opR7ZKa7wRE11dXT+xpqWhe2iqAvsYGWbTV+jqCv2dpoSaCji5SzjkKjOFxXdbIstR72fDvh99BlDn
        H0BusOHBmiQUvmwPegMEjPiKpLxs3SZ4VYC7PmSDL2lRT7LQVGq6SbkVdSB9D3hgv5epmm3GfzGRD84A
        voSeh8iFkTnBiZbY9M2gOkfJPMr6GX/JRA7038C4sq50E3lwCtl0AhKHnlWD/xSqB2qRpjzwwGZ3wi4Z
        Yn6ZNT9atx5TPP3DxntwOUD89NzqVUyK1oOxb1F63roytsi8160bCGU/81Qxvk96ZBUerROZTOZXE3ku
        V3ZfqbF+sEnZ2D1ElhYeqlCGOoxyxQN79eiLW5VmopoBDHxS/0I14L5RB+bqjygS6XT6b057klP7wsX6
        fj3deMk93c4ALG75uGBxowE/GxsJvinus/6YXG8iBxkB0RdY9HOsr2A2+VM8G+GoXMoNtAHdopC7tMaL
        6rmWZae3n4Xnt7e39cEqzBJX77OtHcjDKFN1eTeiQsPT/iDQA2T+IchNml41JVKek9+CPhG4b47jzavi
        yYMvMpnMnf8Bu1kNPNfXSksAAAAASUVORK5CYII=
</value>
  </data>
</root>