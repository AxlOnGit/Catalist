//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Products.Data.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSales")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSales : global::System.Data.DataSet {
        
        private SalesDataTable tableSales;
        
        private VersandkostenstaffelDataTable tableVersandkostenstaffel;
        
        private OffenePostenDataTable tableOffenePosten;
        
        private SalesStatsBaseDataTable tableSalesStatsBase;
        
        private SalesStatsDataTable tableSalesStats;
        
        private AngebotSageDataTable tableAngebotSage;
        
        private AngebotSagePositionDataTable tableAngebotSagePosition;
        
        private SystemMemoDataTable tableSystemMemo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsSales() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsSales(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Sales"] != null)) {
                    base.Tables.Add(new SalesDataTable(ds.Tables["Sales"]));
                }
                if ((ds.Tables["Versandkostenstaffel"] != null)) {
                    base.Tables.Add(new VersandkostenstaffelDataTable(ds.Tables["Versandkostenstaffel"]));
                }
                if ((ds.Tables["OffenePosten"] != null)) {
                    base.Tables.Add(new OffenePostenDataTable(ds.Tables["OffenePosten"]));
                }
                if ((ds.Tables["SalesStatsBase"] != null)) {
                    base.Tables.Add(new SalesStatsBaseDataTable(ds.Tables["SalesStatsBase"]));
                }
                if ((ds.Tables["SalesStats"] != null)) {
                    base.Tables.Add(new SalesStatsDataTable(ds.Tables["SalesStats"]));
                }
                if ((ds.Tables["AngebotSage"] != null)) {
                    base.Tables.Add(new AngebotSageDataTable(ds.Tables["AngebotSage"]));
                }
                if ((ds.Tables["AngebotSagePosition"] != null)) {
                    base.Tables.Add(new AngebotSagePositionDataTable(ds.Tables["AngebotSagePosition"]));
                }
                if ((ds.Tables["SystemMemo"] != null)) {
                    base.Tables.Add(new SystemMemoDataTable(ds.Tables["SystemMemo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesDataTable Sales {
            get {
                return this.tableSales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VersandkostenstaffelDataTable Versandkostenstaffel {
            get {
                return this.tableVersandkostenstaffel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OffenePostenDataTable OffenePosten {
            get {
                return this.tableOffenePosten;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesStatsBaseDataTable SalesStatsBase {
            get {
                return this.tableSalesStatsBase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesStatsDataTable SalesStats {
            get {
                return this.tableSalesStats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AngebotSageDataTable AngebotSage {
            get {
                return this.tableAngebotSage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AngebotSagePositionDataTable AngebotSagePosition {
            get {
                return this.tableAngebotSagePosition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SystemMemoDataTable SystemMemo {
            get {
                return this.tableSystemMemo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsSales cln = ((dsSales)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Sales"] != null)) {
                    base.Tables.Add(new SalesDataTable(ds.Tables["Sales"]));
                }
                if ((ds.Tables["Versandkostenstaffel"] != null)) {
                    base.Tables.Add(new VersandkostenstaffelDataTable(ds.Tables["Versandkostenstaffel"]));
                }
                if ((ds.Tables["OffenePosten"] != null)) {
                    base.Tables.Add(new OffenePostenDataTable(ds.Tables["OffenePosten"]));
                }
                if ((ds.Tables["SalesStatsBase"] != null)) {
                    base.Tables.Add(new SalesStatsBaseDataTable(ds.Tables["SalesStatsBase"]));
                }
                if ((ds.Tables["SalesStats"] != null)) {
                    base.Tables.Add(new SalesStatsDataTable(ds.Tables["SalesStats"]));
                }
                if ((ds.Tables["AngebotSage"] != null)) {
                    base.Tables.Add(new AngebotSageDataTable(ds.Tables["AngebotSage"]));
                }
                if ((ds.Tables["AngebotSagePosition"] != null)) {
                    base.Tables.Add(new AngebotSagePositionDataTable(ds.Tables["AngebotSagePosition"]));
                }
                if ((ds.Tables["SystemMemo"] != null)) {
                    base.Tables.Add(new SystemMemoDataTable(ds.Tables["SystemMemo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSales = ((SalesDataTable)(base.Tables["Sales"]));
            if ((initTable == true)) {
                if ((this.tableSales != null)) {
                    this.tableSales.InitVars();
                }
            }
            this.tableVersandkostenstaffel = ((VersandkostenstaffelDataTable)(base.Tables["Versandkostenstaffel"]));
            if ((initTable == true)) {
                if ((this.tableVersandkostenstaffel != null)) {
                    this.tableVersandkostenstaffel.InitVars();
                }
            }
            this.tableOffenePosten = ((OffenePostenDataTable)(base.Tables["OffenePosten"]));
            if ((initTable == true)) {
                if ((this.tableOffenePosten != null)) {
                    this.tableOffenePosten.InitVars();
                }
            }
            this.tableSalesStatsBase = ((SalesStatsBaseDataTable)(base.Tables["SalesStatsBase"]));
            if ((initTable == true)) {
                if ((this.tableSalesStatsBase != null)) {
                    this.tableSalesStatsBase.InitVars();
                }
            }
            this.tableSalesStats = ((SalesStatsDataTable)(base.Tables["SalesStats"]));
            if ((initTable == true)) {
                if ((this.tableSalesStats != null)) {
                    this.tableSalesStats.InitVars();
                }
            }
            this.tableAngebotSage = ((AngebotSageDataTable)(base.Tables["AngebotSage"]));
            if ((initTable == true)) {
                if ((this.tableAngebotSage != null)) {
                    this.tableAngebotSage.InitVars();
                }
            }
            this.tableAngebotSagePosition = ((AngebotSagePositionDataTable)(base.Tables["AngebotSagePosition"]));
            if ((initTable == true)) {
                if ((this.tableAngebotSagePosition != null)) {
                    this.tableAngebotSagePosition.InitVars();
                }
            }
            this.tableSystemMemo = ((SystemMemoDataTable)(base.Tables["SystemMemo"]));
            if ((initTable == true)) {
                if ((this.tableSystemMemo != null)) {
                    this.tableSystemMemo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsSales";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSales.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSales = new SalesDataTable();
            base.Tables.Add(this.tableSales);
            this.tableVersandkostenstaffel = new VersandkostenstaffelDataTable();
            base.Tables.Add(this.tableVersandkostenstaffel);
            this.tableOffenePosten = new OffenePostenDataTable();
            base.Tables.Add(this.tableOffenePosten);
            this.tableSalesStatsBase = new SalesStatsBaseDataTable();
            base.Tables.Add(this.tableSalesStatsBase);
            this.tableSalesStats = new SalesStatsDataTable();
            base.Tables.Add(this.tableSalesStats);
            this.tableAngebotSage = new AngebotSageDataTable();
            base.Tables.Add(this.tableAngebotSage);
            this.tableAngebotSagePosition = new AngebotSagePositionDataTable();
            base.Tables.Add(this.tableAngebotSagePosition);
            this.tableSystemMemo = new SystemMemoDataTable();
            base.Tables.Add(this.tableSystemMemo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVersandkostenstaffel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOffenePosten() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSalesStatsBase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSalesStats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAngebotSage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAngebotSagePosition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSystemMemo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSales ds = new dsSales();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SalesRowChangeEventHandler(object sender, SalesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VersandkostenstaffelRowChangeEventHandler(object sender, VersandkostenstaffelRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OffenePostenRowChangeEventHandler(object sender, OffenePostenRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SalesStatsBaseRowChangeEventHandler(object sender, SalesStatsBaseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SalesStatsRowChangeEventHandler(object sender, SalesStatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AngebotSageRowChangeEventHandler(object sender, AngebotSageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AngebotSagePositionRowChangeEventHandler(object sender, AngebotSagePositionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SystemMemoRowChangeEventHandler(object sender, SystemMemoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesDataTable : global::System.Data.TypedTableBase<SalesRow> {
            
            private global::System.Data.DataColumn columnArtikel;
            
            private global::System.Data.DataColumn columnBezeichnung1;
            
            private global::System.Data.DataColumn columnUmsatz;
            
            private global::System.Data.DataColumn columnAnzahl;
            
            private global::System.Data.DataColumn columnDatum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesDataTable() {
                this.TableName = "Sales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArtikelColumn {
                get {
                    return this.columnArtikel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bezeichnung1Column {
                get {
                    return this.columnBezeichnung1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzColumn {
                get {
                    return this.columnUmsatz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnzahlColumn {
                get {
                    return this.columnAnzahl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatumColumn {
                get {
                    return this.columnDatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesRow this[int index] {
                get {
                    return ((SalesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesRowChangeEventHandler SalesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesRowChangeEventHandler SalesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesRowChangeEventHandler SalesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesRowChangeEventHandler SalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesRow(SalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesRow AddSalesRow(string Artikel, string Bezeichnung1, decimal Umsatz, double Anzahl, System.DateTime Datum) {
                SalesRow rowSalesRow = ((SalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Artikel,
                        Bezeichnung1,
                        Umsatz,
                        Anzahl,
                        Datum};
                rowSalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesRow);
                return rowSalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesRow FindByArtikel(string Artikel) {
                return ((SalesRow)(this.Rows.Find(new object[] {
                            Artikel})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SalesDataTable cln = ((SalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnArtikel = base.Columns["Artikel"];
                this.columnBezeichnung1 = base.Columns["Bezeichnung1"];
                this.columnUmsatz = base.Columns["Umsatz"];
                this.columnAnzahl = base.Columns["Anzahl"];
                this.columnDatum = base.Columns["Datum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnArtikel = new global::System.Data.DataColumn("Artikel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArtikel);
                this.columnBezeichnung1 = new global::System.Data.DataColumn("Bezeichnung1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBezeichnung1);
                this.columnUmsatz = new global::System.Data.DataColumn("Umsatz", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatz);
                this.columnAnzahl = new global::System.Data.DataColumn("Anzahl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnzahl);
                this.columnDatum = new global::System.Data.DataColumn("Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatum);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnArtikel}, true));
                this.columnArtikel.AllowDBNull = false;
                this.columnArtikel.Unique = true;
                this.columnArtikel.MaxLength = 20;
                this.columnBezeichnung1.AllowDBNull = false;
                this.columnBezeichnung1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesRow NewSalesRow() {
                return ((SalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesRowChanged != null)) {
                    this.SalesRowChanged(this, new SalesRowChangeEvent(((SalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesRowChanging != null)) {
                    this.SalesRowChanging(this, new SalesRowChangeEvent(((SalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesRowDeleted != null)) {
                    this.SalesRowDeleted(this, new SalesRowChangeEvent(((SalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesRowDeleting != null)) {
                    this.SalesRowDeleting(this, new SalesRowChangeEvent(((SalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesRow(SalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VersandkostenstaffelDataTable : global::System.Data.TypedTableBase<VersandkostenstaffelRow> {
            
            private global::System.Data.DataColumn columnKundennummer;
            
            private global::System.Data.DataColumn columnAbWert1;
            
            private global::System.Data.DataColumn columnVKosten1;
            
            private global::System.Data.DataColumn columnAbWert2;
            
            private global::System.Data.DataColumn columnVKosten2;
            
            private global::System.Data.DataColumn columnAbWert3;
            
            private global::System.Data.DataColumn columnVKosten3;
            
            private global::System.Data.DataColumn columnAbWert4;
            
            private global::System.Data.DataColumn columnVKosten4;
            
            private global::System.Data.DataColumn columnKosten;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VersandkostenstaffelDataTable() {
                this.TableName = "Versandkostenstaffel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VersandkostenstaffelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VersandkostenstaffelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KundennummerColumn {
                get {
                    return this.columnKundennummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbWert1Column {
                get {
                    return this.columnAbWert1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VKosten1Column {
                get {
                    return this.columnVKosten1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbWert2Column {
                get {
                    return this.columnAbWert2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VKosten2Column {
                get {
                    return this.columnVKosten2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbWert3Column {
                get {
                    return this.columnAbWert3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VKosten3Column {
                get {
                    return this.columnVKosten3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbWert4Column {
                get {
                    return this.columnAbWert4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VKosten4Column {
                get {
                    return this.columnVKosten4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KostenColumn {
                get {
                    return this.columnKosten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VersandkostenstaffelRow this[int index] {
                get {
                    return ((VersandkostenstaffelRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VersandkostenstaffelRowChangeEventHandler VersandkostenstaffelRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VersandkostenstaffelRowChangeEventHandler VersandkostenstaffelRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VersandkostenstaffelRowChangeEventHandler VersandkostenstaffelRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VersandkostenstaffelRowChangeEventHandler VersandkostenstaffelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVersandkostenstaffelRow(VersandkostenstaffelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VersandkostenstaffelRow AddVersandkostenstaffelRow(string Kundennummer, decimal AbWert1, decimal VKosten1, decimal AbWert2, decimal VKosten2, decimal AbWert3, decimal VKosten3, decimal AbWert4, decimal VKosten4, decimal Kosten) {
                VersandkostenstaffelRow rowVersandkostenstaffelRow = ((VersandkostenstaffelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kundennummer,
                        AbWert1,
                        VKosten1,
                        AbWert2,
                        VKosten2,
                        AbWert3,
                        VKosten3,
                        AbWert4,
                        VKosten4,
                        Kosten};
                rowVersandkostenstaffelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVersandkostenstaffelRow);
                return rowVersandkostenstaffelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VersandkostenstaffelDataTable cln = ((VersandkostenstaffelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VersandkostenstaffelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKundennummer = base.Columns["Kundennummer"];
                this.columnAbWert1 = base.Columns["AbWert1"];
                this.columnVKosten1 = base.Columns["VKosten1"];
                this.columnAbWert2 = base.Columns["AbWert2"];
                this.columnVKosten2 = base.Columns["VKosten2"];
                this.columnAbWert3 = base.Columns["AbWert3"];
                this.columnVKosten3 = base.Columns["VKosten3"];
                this.columnAbWert4 = base.Columns["AbWert4"];
                this.columnVKosten4 = base.Columns["VKosten4"];
                this.columnKosten = base.Columns["Kosten"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKundennummer = new global::System.Data.DataColumn("Kundennummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKundennummer);
                this.columnAbWert1 = new global::System.Data.DataColumn("AbWert1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbWert1);
                this.columnVKosten1 = new global::System.Data.DataColumn("VKosten1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVKosten1);
                this.columnAbWert2 = new global::System.Data.DataColumn("AbWert2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbWert2);
                this.columnVKosten2 = new global::System.Data.DataColumn("VKosten2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVKosten2);
                this.columnAbWert3 = new global::System.Data.DataColumn("AbWert3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbWert3);
                this.columnVKosten3 = new global::System.Data.DataColumn("VKosten3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVKosten3);
                this.columnAbWert4 = new global::System.Data.DataColumn("AbWert4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbWert4);
                this.columnVKosten4 = new global::System.Data.DataColumn("VKosten4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVKosten4);
                this.columnKosten = new global::System.Data.DataColumn("Kosten", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKosten);
                this.columnKundennummer.AllowDBNull = false;
                this.columnKundennummer.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VersandkostenstaffelRow NewVersandkostenstaffelRow() {
                return ((VersandkostenstaffelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VersandkostenstaffelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VersandkostenstaffelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VersandkostenstaffelRowChanged != null)) {
                    this.VersandkostenstaffelRowChanged(this, new VersandkostenstaffelRowChangeEvent(((VersandkostenstaffelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VersandkostenstaffelRowChanging != null)) {
                    this.VersandkostenstaffelRowChanging(this, new VersandkostenstaffelRowChangeEvent(((VersandkostenstaffelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VersandkostenstaffelRowDeleted != null)) {
                    this.VersandkostenstaffelRowDeleted(this, new VersandkostenstaffelRowChangeEvent(((VersandkostenstaffelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VersandkostenstaffelRowDeleting != null)) {
                    this.VersandkostenstaffelRowDeleting(this, new VersandkostenstaffelRowChangeEvent(((VersandkostenstaffelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVersandkostenstaffelRow(VersandkostenstaffelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VersandkostenstaffelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OffenePostenDataTable : global::System.Data.TypedTableBase<OffenePostenRow> {
            
            private global::System.Data.DataColumn columnKundennummer;
            
            private global::System.Data.DataColumn columnBelegnummer;
            
            private global::System.Data.DataColumn columnBelegdatum;
            
            private global::System.Data.DataColumn columnNettozahlungsziel;
            
            private global::System.Data.DataColumn columnRechnungsbetr_InOP_Waehrung;
            
            private global::System.Data.DataColumn columnZahlbetragInOP_Waehrung;
            
            private global::System.Data.DataColumn columnMahnkennzeichen;
            
            private global::System.Data.DataColumn columnDatumLetzteMahnung;
            
            private global::System.Data.DataColumn columnSaldo_InOP_Waehrung;
            
            private global::System.Data.DataColumn columnOverdueDays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OffenePostenDataTable() {
                this.TableName = "OffenePosten";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OffenePostenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OffenePostenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KundennummerColumn {
                get {
                    return this.columnKundennummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BelegnummerColumn {
                get {
                    return this.columnBelegnummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BelegdatumColumn {
                get {
                    return this.columnBelegdatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NettozahlungszielColumn {
                get {
                    return this.columnNettozahlungsziel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Rechnungsbetr_InOP_WaehrungColumn {
                get {
                    return this.columnRechnungsbetr_InOP_Waehrung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZahlbetragInOP_WaehrungColumn {
                get {
                    return this.columnZahlbetragInOP_Waehrung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MahnkennzeichenColumn {
                get {
                    return this.columnMahnkennzeichen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatumLetzteMahnungColumn {
                get {
                    return this.columnDatumLetzteMahnung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldo_InOP_WaehrungColumn {
                get {
                    return this.columnSaldo_InOP_Waehrung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverdueDaysColumn {
                get {
                    return this.columnOverdueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OffenePostenRow this[int index] {
                get {
                    return ((OffenePostenRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OffenePostenRowChangeEventHandler OffenePostenRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OffenePostenRowChangeEventHandler OffenePostenRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OffenePostenRowChangeEventHandler OffenePostenRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OffenePostenRowChangeEventHandler OffenePostenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOffenePostenRow(OffenePostenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OffenePostenRow AddOffenePostenRow(string Kundennummer, string Belegnummer, System.DateTime Belegdatum, short Nettozahlungsziel, decimal Rechnungsbetr_InOP_Waehrung, decimal ZahlbetragInOP_Waehrung, string Mahnkennzeichen, System.DateTime DatumLetzteMahnung, decimal Saldo_InOP_Waehrung, long OverdueDays) {
                OffenePostenRow rowOffenePostenRow = ((OffenePostenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kundennummer,
                        Belegnummer,
                        Belegdatum,
                        Nettozahlungsziel,
                        Rechnungsbetr_InOP_Waehrung,
                        ZahlbetragInOP_Waehrung,
                        Mahnkennzeichen,
                        DatumLetzteMahnung,
                        Saldo_InOP_Waehrung,
                        OverdueDays};
                rowOffenePostenRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOffenePostenRow);
                return rowOffenePostenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OffenePostenDataTable cln = ((OffenePostenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OffenePostenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKundennummer = base.Columns["Kundennummer"];
                this.columnBelegnummer = base.Columns["Belegnummer"];
                this.columnBelegdatum = base.Columns["Belegdatum"];
                this.columnNettozahlungsziel = base.Columns["Nettozahlungsziel"];
                this.columnRechnungsbetr_InOP_Waehrung = base.Columns["Rechnungsbetr_InOP_Waehrung"];
                this.columnZahlbetragInOP_Waehrung = base.Columns["ZahlbetragInOP_Waehrung"];
                this.columnMahnkennzeichen = base.Columns["Mahnkennzeichen"];
                this.columnDatumLetzteMahnung = base.Columns["DatumLetzteMahnung"];
                this.columnSaldo_InOP_Waehrung = base.Columns["Saldo_InOP_Waehrung"];
                this.columnOverdueDays = base.Columns["OverdueDays"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKundennummer = new global::System.Data.DataColumn("Kundennummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKundennummer);
                this.columnBelegnummer = new global::System.Data.DataColumn("Belegnummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBelegnummer);
                this.columnBelegdatum = new global::System.Data.DataColumn("Belegdatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBelegdatum);
                this.columnNettozahlungsziel = new global::System.Data.DataColumn("Nettozahlungsziel", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettozahlungsziel);
                this.columnRechnungsbetr_InOP_Waehrung = new global::System.Data.DataColumn("Rechnungsbetr_InOP_Waehrung", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRechnungsbetr_InOP_Waehrung);
                this.columnZahlbetragInOP_Waehrung = new global::System.Data.DataColumn("ZahlbetragInOP_Waehrung", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZahlbetragInOP_Waehrung);
                this.columnMahnkennzeichen = new global::System.Data.DataColumn("Mahnkennzeichen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMahnkennzeichen);
                this.columnDatumLetzteMahnung = new global::System.Data.DataColumn("DatumLetzteMahnung", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumLetzteMahnung);
                this.columnSaldo_InOP_Waehrung = new global::System.Data.DataColumn("Saldo_InOP_Waehrung", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo_InOP_Waehrung);
                this.columnOverdueDays = new global::System.Data.DataColumn("OverdueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueDays);
                this.columnKundennummer.AllowDBNull = false;
                this.columnKundennummer.MaxLength = 10;
                this.columnBelegnummer.AllowDBNull = false;
                this.columnBelegnummer.MaxLength = 20;
                this.columnBelegdatum.AllowDBNull = false;
                this.columnNettozahlungsziel.AllowDBNull = false;
                this.columnRechnungsbetr_InOP_Waehrung.AllowDBNull = false;
                this.columnZahlbetragInOP_Waehrung.AllowDBNull = false;
                this.columnMahnkennzeichen.AllowDBNull = false;
                this.columnMahnkennzeichen.MaxLength = 2;
                this.columnDatumLetzteMahnung.AllowDBNull = false;
                this.columnSaldo_InOP_Waehrung.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OffenePostenRow NewOffenePostenRow() {
                return ((OffenePostenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OffenePostenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OffenePostenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OffenePostenRowChanged != null)) {
                    this.OffenePostenRowChanged(this, new OffenePostenRowChangeEvent(((OffenePostenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OffenePostenRowChanging != null)) {
                    this.OffenePostenRowChanging(this, new OffenePostenRowChangeEvent(((OffenePostenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OffenePostenRowDeleted != null)) {
                    this.OffenePostenRowDeleted(this, new OffenePostenRowChangeEvent(((OffenePostenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OffenePostenRowDeleting != null)) {
                    this.OffenePostenRowDeleting(this, new OffenePostenRowChangeEvent(((OffenePostenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOffenePostenRow(OffenePostenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OffenePostenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesStatsBaseDataTable : global::System.Data.TypedTableBase<SalesStatsBaseRow> {
            
            private global::System.Data.DataColumn columnJahr;
            
            private global::System.Data.DataColumn columnKundennummer;
            
            private global::System.Data.DataColumn columnUmsatzJanuar;
            
            private global::System.Data.DataColumn columnMengeJanuar;
            
            private global::System.Data.DataColumn columnRohgewinnJanuarAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnJanuarProzent;
            
            private global::System.Data.DataColumn columnUmsatzFebruar;
            
            private global::System.Data.DataColumn columnMengeFebruar;
            
            private global::System.Data.DataColumn columnRohgewinnFebruarAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnFebruarProzent;
            
            private global::System.Data.DataColumn columnUmsatzMaerz;
            
            private global::System.Data.DataColumn columnMengeMaerz;
            
            private global::System.Data.DataColumn columnRohgewinnMaerzAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnMaerzProzent;
            
            private global::System.Data.DataColumn columnUmsatzApril;
            
            private global::System.Data.DataColumn columnMengeApril;
            
            private global::System.Data.DataColumn columnRohgewinnAprilAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnAprilProzent;
            
            private global::System.Data.DataColumn columnUmsatzMai;
            
            private global::System.Data.DataColumn columnMengeMai;
            
            private global::System.Data.DataColumn columnRohgewinnMaiAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnMaiProzent;
            
            private global::System.Data.DataColumn columnUmsatzJuni;
            
            private global::System.Data.DataColumn columnMengeJuni;
            
            private global::System.Data.DataColumn columnRohgewinnJuniAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnJuniProzent;
            
            private global::System.Data.DataColumn columnUmsatzJuli;
            
            private global::System.Data.DataColumn columnMengeJuli;
            
            private global::System.Data.DataColumn columnRohgewinnJuliAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnJuliProzent;
            
            private global::System.Data.DataColumn columnUmsatzAugust;
            
            private global::System.Data.DataColumn columnMengeAugust;
            
            private global::System.Data.DataColumn columnRohgewinnAugustAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnAugustProzent;
            
            private global::System.Data.DataColumn columnUmsatzSeptember;
            
            private global::System.Data.DataColumn columnMengeSeptember;
            
            private global::System.Data.DataColumn columnRohgewinnSeptemberAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnSeptemberProzent;
            
            private global::System.Data.DataColumn columnUmsatzOktober;
            
            private global::System.Data.DataColumn columnMengeOktober;
            
            private global::System.Data.DataColumn columnRohgewinnOktoberAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnOktoberProzent;
            
            private global::System.Data.DataColumn columnUmsatzNovember;
            
            private global::System.Data.DataColumn columnMengeNovember;
            
            private global::System.Data.DataColumn columnRohgewinnNovemberAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnNovemberProzent;
            
            private global::System.Data.DataColumn columnUmsatzDezember;
            
            private global::System.Data.DataColumn columnMengeDezember;
            
            private global::System.Data.DataColumn columnRohgewinnDezemberAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnDezemberProzent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsBaseDataTable() {
                this.TableName = "SalesStatsBase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesStatsBaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SalesStatsBaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JahrColumn {
                get {
                    return this.columnJahr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KundennummerColumn {
                get {
                    return this.columnKundennummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzJanuarColumn {
                get {
                    return this.columnUmsatzJanuar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeJanuarColumn {
                get {
                    return this.columnMengeJanuar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnJanuarAbsolutColumn {
                get {
                    return this.columnRohgewinnJanuarAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnJanuarProzentColumn {
                get {
                    return this.columnRohgewinnJanuarProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzFebruarColumn {
                get {
                    return this.columnUmsatzFebruar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeFebruarColumn {
                get {
                    return this.columnMengeFebruar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnFebruarAbsolutColumn {
                get {
                    return this.columnRohgewinnFebruarAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnFebruarProzentColumn {
                get {
                    return this.columnRohgewinnFebruarProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzMaerzColumn {
                get {
                    return this.columnUmsatzMaerz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeMaerzColumn {
                get {
                    return this.columnMengeMaerz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnMaerzAbsolutColumn {
                get {
                    return this.columnRohgewinnMaerzAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnMaerzProzentColumn {
                get {
                    return this.columnRohgewinnMaerzProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzAprilColumn {
                get {
                    return this.columnUmsatzApril;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeAprilColumn {
                get {
                    return this.columnMengeApril;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnAprilAbsolutColumn {
                get {
                    return this.columnRohgewinnAprilAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnAprilProzentColumn {
                get {
                    return this.columnRohgewinnAprilProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzMaiColumn {
                get {
                    return this.columnUmsatzMai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeMaiColumn {
                get {
                    return this.columnMengeMai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnMaiAbsolutColumn {
                get {
                    return this.columnRohgewinnMaiAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnMaiProzentColumn {
                get {
                    return this.columnRohgewinnMaiProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzJuniColumn {
                get {
                    return this.columnUmsatzJuni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeJuniColumn {
                get {
                    return this.columnMengeJuni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnJuniAbsolutColumn {
                get {
                    return this.columnRohgewinnJuniAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnJuniProzentColumn {
                get {
                    return this.columnRohgewinnJuniProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzJuliColumn {
                get {
                    return this.columnUmsatzJuli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeJuliColumn {
                get {
                    return this.columnMengeJuli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnJuliAbsolutColumn {
                get {
                    return this.columnRohgewinnJuliAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnJuliProzentColumn {
                get {
                    return this.columnRohgewinnJuliProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzAugustColumn {
                get {
                    return this.columnUmsatzAugust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeAugustColumn {
                get {
                    return this.columnMengeAugust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnAugustAbsolutColumn {
                get {
                    return this.columnRohgewinnAugustAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnAugustProzentColumn {
                get {
                    return this.columnRohgewinnAugustProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzSeptemberColumn {
                get {
                    return this.columnUmsatzSeptember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeSeptemberColumn {
                get {
                    return this.columnMengeSeptember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnSeptemberAbsolutColumn {
                get {
                    return this.columnRohgewinnSeptemberAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnSeptemberProzentColumn {
                get {
                    return this.columnRohgewinnSeptemberProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzOktoberColumn {
                get {
                    return this.columnUmsatzOktober;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeOktoberColumn {
                get {
                    return this.columnMengeOktober;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnOktoberAbsolutColumn {
                get {
                    return this.columnRohgewinnOktoberAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnOktoberProzentColumn {
                get {
                    return this.columnRohgewinnOktoberProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzNovemberColumn {
                get {
                    return this.columnUmsatzNovember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeNovemberColumn {
                get {
                    return this.columnMengeNovember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnNovemberAbsolutColumn {
                get {
                    return this.columnRohgewinnNovemberAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnNovemberProzentColumn {
                get {
                    return this.columnRohgewinnNovemberProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzDezemberColumn {
                get {
                    return this.columnUmsatzDezember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeDezemberColumn {
                get {
                    return this.columnMengeDezember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnDezemberAbsolutColumn {
                get {
                    return this.columnRohgewinnDezemberAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnDezemberProzentColumn {
                get {
                    return this.columnRohgewinnDezemberProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsBaseRow this[int index] {
                get {
                    return ((SalesStatsBaseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsBaseRowChangeEventHandler SalesStatsBaseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsBaseRowChangeEventHandler SalesStatsBaseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsBaseRowChangeEventHandler SalesStatsBaseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsBaseRowChangeEventHandler SalesStatsBaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesStatsBaseRow(SalesStatsBaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsBaseRow AddSalesStatsBaseRow(
                        int Jahr, 
                        string Kundennummer, 
                        decimal UmsatzJanuar, 
                        double MengeJanuar, 
                        decimal RohgewinnJanuarAbsolut, 
                        decimal RohgewinnJanuarProzent, 
                        decimal UmsatzFebruar, 
                        double MengeFebruar, 
                        decimal RohgewinnFebruarAbsolut, 
                        decimal RohgewinnFebruarProzent, 
                        decimal UmsatzMaerz, 
                        double MengeMaerz, 
                        decimal RohgewinnMaerzAbsolut, 
                        decimal RohgewinnMaerzProzent, 
                        decimal UmsatzApril, 
                        double MengeApril, 
                        decimal RohgewinnAprilAbsolut, 
                        decimal RohgewinnAprilProzent, 
                        decimal UmsatzMai, 
                        double MengeMai, 
                        decimal RohgewinnMaiAbsolut, 
                        decimal RohgewinnMaiProzent, 
                        decimal UmsatzJuni, 
                        double MengeJuni, 
                        decimal RohgewinnJuniAbsolut, 
                        decimal RohgewinnJuniProzent, 
                        decimal UmsatzJuli, 
                        double MengeJuli, 
                        decimal RohgewinnJuliAbsolut, 
                        decimal RohgewinnJuliProzent, 
                        decimal UmsatzAugust, 
                        double MengeAugust, 
                        decimal RohgewinnAugustAbsolut, 
                        decimal RohgewinnAugustProzent, 
                        decimal UmsatzSeptember, 
                        double MengeSeptember, 
                        decimal RohgewinnSeptemberAbsolut, 
                        decimal RohgewinnSeptemberProzent, 
                        decimal UmsatzOktober, 
                        double MengeOktober, 
                        decimal RohgewinnOktoberAbsolut, 
                        decimal RohgewinnOktoberProzent, 
                        decimal UmsatzNovember, 
                        double MengeNovember, 
                        decimal RohgewinnNovemberAbsolut, 
                        decimal RohgewinnNovemberProzent, 
                        decimal UmsatzDezember, 
                        double MengeDezember, 
                        decimal RohgewinnDezemberAbsolut, 
                        decimal RohgewinnDezemberProzent) {
                SalesStatsBaseRow rowSalesStatsBaseRow = ((SalesStatsBaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Jahr,
                        Kundennummer,
                        UmsatzJanuar,
                        MengeJanuar,
                        RohgewinnJanuarAbsolut,
                        RohgewinnJanuarProzent,
                        UmsatzFebruar,
                        MengeFebruar,
                        RohgewinnFebruarAbsolut,
                        RohgewinnFebruarProzent,
                        UmsatzMaerz,
                        MengeMaerz,
                        RohgewinnMaerzAbsolut,
                        RohgewinnMaerzProzent,
                        UmsatzApril,
                        MengeApril,
                        RohgewinnAprilAbsolut,
                        RohgewinnAprilProzent,
                        UmsatzMai,
                        MengeMai,
                        RohgewinnMaiAbsolut,
                        RohgewinnMaiProzent,
                        UmsatzJuni,
                        MengeJuni,
                        RohgewinnJuniAbsolut,
                        RohgewinnJuniProzent,
                        UmsatzJuli,
                        MengeJuli,
                        RohgewinnJuliAbsolut,
                        RohgewinnJuliProzent,
                        UmsatzAugust,
                        MengeAugust,
                        RohgewinnAugustAbsolut,
                        RohgewinnAugustProzent,
                        UmsatzSeptember,
                        MengeSeptember,
                        RohgewinnSeptemberAbsolut,
                        RohgewinnSeptemberProzent,
                        UmsatzOktober,
                        MengeOktober,
                        RohgewinnOktoberAbsolut,
                        RohgewinnOktoberProzent,
                        UmsatzNovember,
                        MengeNovember,
                        RohgewinnNovemberAbsolut,
                        RohgewinnNovemberProzent,
                        UmsatzDezember,
                        MengeDezember,
                        RohgewinnDezemberAbsolut,
                        RohgewinnDezemberProzent};
                rowSalesStatsBaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesStatsBaseRow);
                return rowSalesStatsBaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SalesStatsBaseDataTable cln = ((SalesStatsBaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesStatsBaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJahr = base.Columns["Jahr"];
                this.columnKundennummer = base.Columns["Kundennummer"];
                this.columnUmsatzJanuar = base.Columns["UmsatzJanuar"];
                this.columnMengeJanuar = base.Columns["MengeJanuar"];
                this.columnRohgewinnJanuarAbsolut = base.Columns["RohgewinnJanuarAbsolut"];
                this.columnRohgewinnJanuarProzent = base.Columns["RohgewinnJanuarProzent"];
                this.columnUmsatzFebruar = base.Columns["UmsatzFebruar"];
                this.columnMengeFebruar = base.Columns["MengeFebruar"];
                this.columnRohgewinnFebruarAbsolut = base.Columns["RohgewinnFebruarAbsolut"];
                this.columnRohgewinnFebruarProzent = base.Columns["RohgewinnFebruarProzent"];
                this.columnUmsatzMaerz = base.Columns["UmsatzMaerz"];
                this.columnMengeMaerz = base.Columns["MengeMaerz"];
                this.columnRohgewinnMaerzAbsolut = base.Columns["RohgewinnMaerzAbsolut"];
                this.columnRohgewinnMaerzProzent = base.Columns["RohgewinnMaerzProzent"];
                this.columnUmsatzApril = base.Columns["UmsatzApril"];
                this.columnMengeApril = base.Columns["MengeApril"];
                this.columnRohgewinnAprilAbsolut = base.Columns["RohgewinnAprilAbsolut"];
                this.columnRohgewinnAprilProzent = base.Columns["RohgewinnAprilProzent"];
                this.columnUmsatzMai = base.Columns["UmsatzMai"];
                this.columnMengeMai = base.Columns["MengeMai"];
                this.columnRohgewinnMaiAbsolut = base.Columns["RohgewinnMaiAbsolut"];
                this.columnRohgewinnMaiProzent = base.Columns["RohgewinnMaiProzent"];
                this.columnUmsatzJuni = base.Columns["UmsatzJuni"];
                this.columnMengeJuni = base.Columns["MengeJuni"];
                this.columnRohgewinnJuniAbsolut = base.Columns["RohgewinnJuniAbsolut"];
                this.columnRohgewinnJuniProzent = base.Columns["RohgewinnJuniProzent"];
                this.columnUmsatzJuli = base.Columns["UmsatzJuli"];
                this.columnMengeJuli = base.Columns["MengeJuli"];
                this.columnRohgewinnJuliAbsolut = base.Columns["RohgewinnJuliAbsolut"];
                this.columnRohgewinnJuliProzent = base.Columns["RohgewinnJuliProzent"];
                this.columnUmsatzAugust = base.Columns["UmsatzAugust"];
                this.columnMengeAugust = base.Columns["MengeAugust"];
                this.columnRohgewinnAugustAbsolut = base.Columns["RohgewinnAugustAbsolut"];
                this.columnRohgewinnAugustProzent = base.Columns["RohgewinnAugustProzent"];
                this.columnUmsatzSeptember = base.Columns["UmsatzSeptember"];
                this.columnMengeSeptember = base.Columns["MengeSeptember"];
                this.columnRohgewinnSeptemberAbsolut = base.Columns["RohgewinnSeptemberAbsolut"];
                this.columnRohgewinnSeptemberProzent = base.Columns["RohgewinnSeptemberProzent"];
                this.columnUmsatzOktober = base.Columns["UmsatzOktober"];
                this.columnMengeOktober = base.Columns["MengeOktober"];
                this.columnRohgewinnOktoberAbsolut = base.Columns["RohgewinnOktoberAbsolut"];
                this.columnRohgewinnOktoberProzent = base.Columns["RohgewinnOktoberProzent"];
                this.columnUmsatzNovember = base.Columns["UmsatzNovember"];
                this.columnMengeNovember = base.Columns["MengeNovember"];
                this.columnRohgewinnNovemberAbsolut = base.Columns["RohgewinnNovemberAbsolut"];
                this.columnRohgewinnNovemberProzent = base.Columns["RohgewinnNovemberProzent"];
                this.columnUmsatzDezember = base.Columns["UmsatzDezember"];
                this.columnMengeDezember = base.Columns["MengeDezember"];
                this.columnRohgewinnDezemberAbsolut = base.Columns["RohgewinnDezemberAbsolut"];
                this.columnRohgewinnDezemberProzent = base.Columns["RohgewinnDezemberProzent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJahr = new global::System.Data.DataColumn("Jahr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJahr);
                this.columnKundennummer = new global::System.Data.DataColumn("Kundennummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKundennummer);
                this.columnUmsatzJanuar = new global::System.Data.DataColumn("UmsatzJanuar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzJanuar);
                this.columnMengeJanuar = new global::System.Data.DataColumn("MengeJanuar", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeJanuar);
                this.columnRohgewinnJanuarAbsolut = new global::System.Data.DataColumn("RohgewinnJanuarAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnJanuarAbsolut);
                this.columnRohgewinnJanuarProzent = new global::System.Data.DataColumn("RohgewinnJanuarProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnJanuarProzent);
                this.columnUmsatzFebruar = new global::System.Data.DataColumn("UmsatzFebruar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzFebruar);
                this.columnMengeFebruar = new global::System.Data.DataColumn("MengeFebruar", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeFebruar);
                this.columnRohgewinnFebruarAbsolut = new global::System.Data.DataColumn("RohgewinnFebruarAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnFebruarAbsolut);
                this.columnRohgewinnFebruarProzent = new global::System.Data.DataColumn("RohgewinnFebruarProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnFebruarProzent);
                this.columnUmsatzMaerz = new global::System.Data.DataColumn("UmsatzMaerz", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzMaerz);
                this.columnMengeMaerz = new global::System.Data.DataColumn("MengeMaerz", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeMaerz);
                this.columnRohgewinnMaerzAbsolut = new global::System.Data.DataColumn("RohgewinnMaerzAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnMaerzAbsolut);
                this.columnRohgewinnMaerzProzent = new global::System.Data.DataColumn("RohgewinnMaerzProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnMaerzProzent);
                this.columnUmsatzApril = new global::System.Data.DataColumn("UmsatzApril", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzApril);
                this.columnMengeApril = new global::System.Data.DataColumn("MengeApril", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeApril);
                this.columnRohgewinnAprilAbsolut = new global::System.Data.DataColumn("RohgewinnAprilAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnAprilAbsolut);
                this.columnRohgewinnAprilProzent = new global::System.Data.DataColumn("RohgewinnAprilProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnAprilProzent);
                this.columnUmsatzMai = new global::System.Data.DataColumn("UmsatzMai", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzMai);
                this.columnMengeMai = new global::System.Data.DataColumn("MengeMai", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeMai);
                this.columnRohgewinnMaiAbsolut = new global::System.Data.DataColumn("RohgewinnMaiAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnMaiAbsolut);
                this.columnRohgewinnMaiProzent = new global::System.Data.DataColumn("RohgewinnMaiProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnMaiProzent);
                this.columnUmsatzJuni = new global::System.Data.DataColumn("UmsatzJuni", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzJuni);
                this.columnMengeJuni = new global::System.Data.DataColumn("MengeJuni", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeJuni);
                this.columnRohgewinnJuniAbsolut = new global::System.Data.DataColumn("RohgewinnJuniAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnJuniAbsolut);
                this.columnRohgewinnJuniProzent = new global::System.Data.DataColumn("RohgewinnJuniProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnJuniProzent);
                this.columnUmsatzJuli = new global::System.Data.DataColumn("UmsatzJuli", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzJuli);
                this.columnMengeJuli = new global::System.Data.DataColumn("MengeJuli", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeJuli);
                this.columnRohgewinnJuliAbsolut = new global::System.Data.DataColumn("RohgewinnJuliAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnJuliAbsolut);
                this.columnRohgewinnJuliProzent = new global::System.Data.DataColumn("RohgewinnJuliProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnJuliProzent);
                this.columnUmsatzAugust = new global::System.Data.DataColumn("UmsatzAugust", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzAugust);
                this.columnMengeAugust = new global::System.Data.DataColumn("MengeAugust", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeAugust);
                this.columnRohgewinnAugustAbsolut = new global::System.Data.DataColumn("RohgewinnAugustAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnAugustAbsolut);
                this.columnRohgewinnAugustProzent = new global::System.Data.DataColumn("RohgewinnAugustProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnAugustProzent);
                this.columnUmsatzSeptember = new global::System.Data.DataColumn("UmsatzSeptember", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzSeptember);
                this.columnMengeSeptember = new global::System.Data.DataColumn("MengeSeptember", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeSeptember);
                this.columnRohgewinnSeptemberAbsolut = new global::System.Data.DataColumn("RohgewinnSeptemberAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnSeptemberAbsolut);
                this.columnRohgewinnSeptemberProzent = new global::System.Data.DataColumn("RohgewinnSeptemberProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnSeptemberProzent);
                this.columnUmsatzOktober = new global::System.Data.DataColumn("UmsatzOktober", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzOktober);
                this.columnMengeOktober = new global::System.Data.DataColumn("MengeOktober", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeOktober);
                this.columnRohgewinnOktoberAbsolut = new global::System.Data.DataColumn("RohgewinnOktoberAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnOktoberAbsolut);
                this.columnRohgewinnOktoberProzent = new global::System.Data.DataColumn("RohgewinnOktoberProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnOktoberProzent);
                this.columnUmsatzNovember = new global::System.Data.DataColumn("UmsatzNovember", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzNovember);
                this.columnMengeNovember = new global::System.Data.DataColumn("MengeNovember", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeNovember);
                this.columnRohgewinnNovemberAbsolut = new global::System.Data.DataColumn("RohgewinnNovemberAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnNovemberAbsolut);
                this.columnRohgewinnNovemberProzent = new global::System.Data.DataColumn("RohgewinnNovemberProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnNovemberProzent);
                this.columnUmsatzDezember = new global::System.Data.DataColumn("UmsatzDezember", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatzDezember);
                this.columnMengeDezember = new global::System.Data.DataColumn("MengeDezember", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeDezember);
                this.columnRohgewinnDezemberAbsolut = new global::System.Data.DataColumn("RohgewinnDezemberAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnDezemberAbsolut);
                this.columnRohgewinnDezemberProzent = new global::System.Data.DataColumn("RohgewinnDezemberProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnDezemberProzent);
                this.columnJahr.AllowDBNull = false;
                this.columnKundennummer.AllowDBNull = false;
                this.columnKundennummer.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsBaseRow NewSalesStatsBaseRow() {
                return ((SalesStatsBaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesStatsBaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SalesStatsBaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesStatsBaseRowChanged != null)) {
                    this.SalesStatsBaseRowChanged(this, new SalesStatsBaseRowChangeEvent(((SalesStatsBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesStatsBaseRowChanging != null)) {
                    this.SalesStatsBaseRowChanging(this, new SalesStatsBaseRowChangeEvent(((SalesStatsBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesStatsBaseRowDeleted != null)) {
                    this.SalesStatsBaseRowDeleted(this, new SalesStatsBaseRowChangeEvent(((SalesStatsBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesStatsBaseRowDeleting != null)) {
                    this.SalesStatsBaseRowDeleting(this, new SalesStatsBaseRowChangeEvent(((SalesStatsBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesStatsBaseRow(SalesStatsBaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesStatsBaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesStatsDataTable : global::System.Data.TypedTableBase<SalesStatsRow> {
            
            private global::System.Data.DataColumn columnKundennummer;
            
            private global::System.Data.DataColumn columnDatum;
            
            private global::System.Data.DataColumn columnUmsatz;
            
            private global::System.Data.DataColumn columnMenge;
            
            private global::System.Data.DataColumn columnRohgewinnAbsolut;
            
            private global::System.Data.DataColumn columnRohgewinnProzent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsDataTable() {
                this.TableName = "SalesStats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesStatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SalesStatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KundennummerColumn {
                get {
                    return this.columnKundennummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatumColumn {
                get {
                    return this.columnDatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UmsatzColumn {
                get {
                    return this.columnUmsatz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeColumn {
                get {
                    return this.columnMenge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnAbsolutColumn {
                get {
                    return this.columnRohgewinnAbsolut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RohgewinnProzentColumn {
                get {
                    return this.columnRohgewinnProzent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsRow this[int index] {
                get {
                    return ((SalesStatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsRowChangeEventHandler SalesStatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsRowChangeEventHandler SalesStatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsRowChangeEventHandler SalesStatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesStatsRowChangeEventHandler SalesStatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesStatsRow(SalesStatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsRow AddSalesStatsRow(string Kundennummer, System.DateTime Datum, decimal Umsatz, double Menge, decimal RohgewinnAbsolut, decimal RohgewinnProzent) {
                SalesStatsRow rowSalesStatsRow = ((SalesStatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kundennummer,
                        Datum,
                        Umsatz,
                        Menge,
                        RohgewinnAbsolut,
                        RohgewinnProzent};
                rowSalesStatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesStatsRow);
                return rowSalesStatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SalesStatsDataTable cln = ((SalesStatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesStatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKundennummer = base.Columns["Kundennummer"];
                this.columnDatum = base.Columns["Datum"];
                this.columnUmsatz = base.Columns["Umsatz"];
                this.columnMenge = base.Columns["Menge"];
                this.columnRohgewinnAbsolut = base.Columns["RohgewinnAbsolut"];
                this.columnRohgewinnProzent = base.Columns["RohgewinnProzent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKundennummer = new global::System.Data.DataColumn("Kundennummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKundennummer);
                this.columnDatum = new global::System.Data.DataColumn("Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatum);
                this.columnUmsatz = new global::System.Data.DataColumn("Umsatz", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmsatz);
                this.columnMenge = new global::System.Data.DataColumn("Menge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenge);
                this.columnRohgewinnAbsolut = new global::System.Data.DataColumn("RohgewinnAbsolut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnAbsolut);
                this.columnRohgewinnProzent = new global::System.Data.DataColumn("RohgewinnProzent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRohgewinnProzent);
                this.columnKundennummer.AllowDBNull = false;
                this.columnKundennummer.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsRow NewSalesStatsRow() {
                return ((SalesStatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesStatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SalesStatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesStatsRowChanged != null)) {
                    this.SalesStatsRowChanged(this, new SalesStatsRowChangeEvent(((SalesStatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesStatsRowChanging != null)) {
                    this.SalesStatsRowChanging(this, new SalesStatsRowChangeEvent(((SalesStatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesStatsRowDeleted != null)) {
                    this.SalesStatsRowDeleted(this, new SalesStatsRowChangeEvent(((SalesStatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesStatsRowDeleting != null)) {
                    this.SalesStatsRowDeleting(this, new SalesStatsRowChangeEvent(((SalesStatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesStatsRow(SalesStatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesStatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AngebotSageDataTable : global::System.Data.TypedTableBase<AngebotSageRow> {
            
            private global::System.Data.DataColumn columnNummer;
            
            private global::System.Data.DataColumn columnDatum;
            
            private global::System.Data.DataColumn columnKundennummer;
            
            private global::System.Data.DataColumn columnVertreter1;
            
            private global::System.Data.DataColumn columnRechnungskunde;
            
            private global::System.Data.DataColumn columnSummeZKD1_USt_1;
            
            private global::System.Data.DataColumn columnSummeZKD2_USt_1;
            
            private global::System.Data.DataColumn columnBruttosumme;
            
            private global::System.Data.DataColumn columnRoherloes;
            
            private global::System.Data.DataColumn columnGesamtrabatt;
            
            private global::System.Data.DataColumn columnAnsprechpartnernummer;
            
            private global::System.Data.DataColumn columnSteuersatzSumme1;
            
            private global::System.Data.DataColumn columnTimestamp_Datum;
            
            private global::System.Data.DataColumn columnTimestamp_Zeit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageDataTable() {
                this.TableName = "AngebotSage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AngebotSageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AngebotSageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NummerColumn {
                get {
                    return this.columnNummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatumColumn {
                get {
                    return this.columnDatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KundennummerColumn {
                get {
                    return this.columnKundennummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vertreter1Column {
                get {
                    return this.columnVertreter1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RechnungskundeColumn {
                get {
                    return this.columnRechnungskunde;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SummeZKD1_USt_1Column {
                get {
                    return this.columnSummeZKD1_USt_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SummeZKD2_USt_1Column {
                get {
                    return this.columnSummeZKD2_USt_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BruttosummeColumn {
                get {
                    return this.columnBruttosumme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RoherloesColumn {
                get {
                    return this.columnRoherloes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GesamtrabattColumn {
                get {
                    return this.columnGesamtrabatt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnsprechpartnernummerColumn {
                get {
                    return this.columnAnsprechpartnernummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SteuersatzSumme1Column {
                get {
                    return this.columnSteuersatzSumme1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Timestamp_DatumColumn {
                get {
                    return this.columnTimestamp_Datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Timestamp_ZeitColumn {
                get {
                    return this.columnTimestamp_Zeit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageRow this[int index] {
                get {
                    return ((AngebotSageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSageRowChangeEventHandler AngebotSageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSageRowChangeEventHandler AngebotSageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSageRowChangeEventHandler AngebotSageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSageRowChangeEventHandler AngebotSageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAngebotSageRow(AngebotSageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageRow AddAngebotSageRow(string Nummer, System.DateTime Datum, string Kundennummer, string Vertreter1, string Rechnungskunde, decimal SummeZKD1_USt_1, decimal SummeZKD2_USt_1, decimal Bruttosumme, decimal Roherloes, decimal Gesamtrabatt, string Ansprechpartnernummer, decimal SteuersatzSumme1, System.DateTime Timestamp_Datum, System.TimeSpan Timestamp_Zeit) {
                AngebotSageRow rowAngebotSageRow = ((AngebotSageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Nummer,
                        Datum,
                        Kundennummer,
                        Vertreter1,
                        Rechnungskunde,
                        SummeZKD1_USt_1,
                        SummeZKD2_USt_1,
                        Bruttosumme,
                        Roherloes,
                        Gesamtrabatt,
                        Ansprechpartnernummer,
                        SteuersatzSumme1,
                        Timestamp_Datum,
                        Timestamp_Zeit};
                rowAngebotSageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAngebotSageRow);
                return rowAngebotSageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageRow FindByNummer(string Nummer) {
                return ((AngebotSageRow)(this.Rows.Find(new object[] {
                            Nummer})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AngebotSageDataTable cln = ((AngebotSageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AngebotSageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNummer = base.Columns["Nummer"];
                this.columnDatum = base.Columns["Datum"];
                this.columnKundennummer = base.Columns["Kundennummer"];
                this.columnVertreter1 = base.Columns["Vertreter1"];
                this.columnRechnungskunde = base.Columns["Rechnungskunde"];
                this.columnSummeZKD1_USt_1 = base.Columns["SummeZKD1_USt_1"];
                this.columnSummeZKD2_USt_1 = base.Columns["SummeZKD2_USt_1"];
                this.columnBruttosumme = base.Columns["Bruttosumme"];
                this.columnRoherloes = base.Columns["Roherloes"];
                this.columnGesamtrabatt = base.Columns["Gesamtrabatt"];
                this.columnAnsprechpartnernummer = base.Columns["Ansprechpartnernummer"];
                this.columnSteuersatzSumme1 = base.Columns["SteuersatzSumme1"];
                this.columnTimestamp_Datum = base.Columns["Timestamp_Datum"];
                this.columnTimestamp_Zeit = base.Columns["Timestamp_Zeit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNummer = new global::System.Data.DataColumn("Nummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNummer);
                this.columnDatum = new global::System.Data.DataColumn("Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatum);
                this.columnKundennummer = new global::System.Data.DataColumn("Kundennummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKundennummer);
                this.columnVertreter1 = new global::System.Data.DataColumn("Vertreter1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVertreter1);
                this.columnRechnungskunde = new global::System.Data.DataColumn("Rechnungskunde", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRechnungskunde);
                this.columnSummeZKD1_USt_1 = new global::System.Data.DataColumn("SummeZKD1_USt_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummeZKD1_USt_1);
                this.columnSummeZKD2_USt_1 = new global::System.Data.DataColumn("SummeZKD2_USt_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummeZKD2_USt_1);
                this.columnBruttosumme = new global::System.Data.DataColumn("Bruttosumme", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBruttosumme);
                this.columnRoherloes = new global::System.Data.DataColumn("Roherloes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoherloes);
                this.columnGesamtrabatt = new global::System.Data.DataColumn("Gesamtrabatt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGesamtrabatt);
                this.columnAnsprechpartnernummer = new global::System.Data.DataColumn("Ansprechpartnernummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnsprechpartnernummer);
                this.columnSteuersatzSumme1 = new global::System.Data.DataColumn("SteuersatzSumme1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteuersatzSumme1);
                this.columnTimestamp_Datum = new global::System.Data.DataColumn("Timestamp_Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimestamp_Datum);
                this.columnTimestamp_Zeit = new global::System.Data.DataColumn("Timestamp_Zeit", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimestamp_Zeit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNummer}, true));
                this.columnNummer.AllowDBNull = false;
                this.columnNummer.Unique = true;
                this.columnNummer.MaxLength = 11;
                this.columnDatum.AllowDBNull = false;
                this.columnKundennummer.AllowDBNull = false;
                this.columnKundennummer.MaxLength = 10;
                this.columnVertreter1.AllowDBNull = false;
                this.columnVertreter1.MaxLength = 3;
                this.columnRechnungskunde.AllowDBNull = false;
                this.columnRechnungskunde.MaxLength = 10;
                this.columnSummeZKD1_USt_1.AllowDBNull = false;
                this.columnSummeZKD2_USt_1.AllowDBNull = false;
                this.columnBruttosumme.AllowDBNull = false;
                this.columnRoherloes.AllowDBNull = false;
                this.columnGesamtrabatt.AllowDBNull = false;
                this.columnAnsprechpartnernummer.AllowDBNull = false;
                this.columnAnsprechpartnernummer.MaxLength = 5;
                this.columnSteuersatzSumme1.AllowDBNull = false;
                this.columnTimestamp_Datum.AllowDBNull = false;
                this.columnTimestamp_Zeit.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageRow NewAngebotSageRow() {
                return ((AngebotSageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AngebotSageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AngebotSageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AngebotSageRowChanged != null)) {
                    this.AngebotSageRowChanged(this, new AngebotSageRowChangeEvent(((AngebotSageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AngebotSageRowChanging != null)) {
                    this.AngebotSageRowChanging(this, new AngebotSageRowChangeEvent(((AngebotSageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AngebotSageRowDeleted != null)) {
                    this.AngebotSageRowDeleted(this, new AngebotSageRowChangeEvent(((AngebotSageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AngebotSageRowDeleting != null)) {
                    this.AngebotSageRowDeleting(this, new AngebotSageRowChangeEvent(((AngebotSageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAngebotSageRow(AngebotSageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AngebotSageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AngebotSagePositionDataTable : global::System.Data.TypedTableBase<AngebotSagePositionRow> {
            
            private global::System.Data.DataColumn columnSequence;
            
            private global::System.Data.DataColumn columnVorgangsnummerTemporaer;
            
            private global::System.Data.DataColumn columnPositionstyp;
            
            private global::System.Data.DataColumn columnPositionsart;
            
            private global::System.Data.DataColumn columnArtikelnummer;
            
            private global::System.Data.DataColumn columnStuecklistennummer;
            
            private global::System.Data.DataColumn columnBezeichnung1;
            
            private global::System.Data.DataColumn columnBezeichnung2;
            
            private global::System.Data.DataColumn columnHersteller;
            
            private global::System.Data.DataColumn columnMenge;
            
            private global::System.Data.DataColumn columnEinzelpreis;
            
            private global::System.Data.DataColumn columnGesamtpreis;
            
            private global::System.Data.DataColumn columnMengeneinheit;
            
            private global::System.Data.DataColumn columnLangtext;
            
            private global::System.Data.DataColumn columnAnker_RTFMemo;
            
            private global::System.Data.DataColumn columnZwischensumme;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSagePositionDataTable() {
                this.TableName = "AngebotSagePosition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AngebotSagePositionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AngebotSagePositionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceColumn {
                get {
                    return this.columnSequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VorgangsnummerTemporaerColumn {
                get {
                    return this.columnVorgangsnummerTemporaer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PositionstypColumn {
                get {
                    return this.columnPositionstyp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PositionsartColumn {
                get {
                    return this.columnPositionsart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArtikelnummerColumn {
                get {
                    return this.columnArtikelnummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StuecklistennummerColumn {
                get {
                    return this.columnStuecklistennummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bezeichnung1Column {
                get {
                    return this.columnBezeichnung1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bezeichnung2Column {
                get {
                    return this.columnBezeichnung2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HerstellerColumn {
                get {
                    return this.columnHersteller;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeColumn {
                get {
                    return this.columnMenge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EinzelpreisColumn {
                get {
                    return this.columnEinzelpreis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GesamtpreisColumn {
                get {
                    return this.columnGesamtpreis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MengeneinheitColumn {
                get {
                    return this.columnMengeneinheit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LangtextColumn {
                get {
                    return this.columnLangtext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Anker_RTFMemoColumn {
                get {
                    return this.columnAnker_RTFMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZwischensummeColumn {
                get {
                    return this.columnZwischensumme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSagePositionRow this[int index] {
                get {
                    return ((AngebotSagePositionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSagePositionRowChangeEventHandler AngebotSagePositionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSagePositionRowChangeEventHandler AngebotSagePositionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSagePositionRowChangeEventHandler AngebotSagePositionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AngebotSagePositionRowChangeEventHandler AngebotSagePositionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAngebotSagePositionRow(AngebotSagePositionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSagePositionRow AddAngebotSagePositionRow(
                        decimal Sequence, 
                        string VorgangsnummerTemporaer, 
                        short Positionstyp, 
                        string Positionsart, 
                        string Artikelnummer, 
                        string Stuecklistennummer, 
                        string Bezeichnung1, 
                        string Bezeichnung2, 
                        string Hersteller, 
                        double Menge, 
                        decimal Einzelpreis, 
                        decimal Gesamtpreis, 
                        string Mengeneinheit, 
                        string Langtext, 
                        int Anker_RTFMemo, 
                        decimal Zwischensumme) {
                AngebotSagePositionRow rowAngebotSagePositionRow = ((AngebotSagePositionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Sequence,
                        VorgangsnummerTemporaer,
                        Positionstyp,
                        Positionsart,
                        Artikelnummer,
                        Stuecklistennummer,
                        Bezeichnung1,
                        Bezeichnung2,
                        Hersteller,
                        Menge,
                        Einzelpreis,
                        Gesamtpreis,
                        Mengeneinheit,
                        Langtext,
                        Anker_RTFMemo,
                        Zwischensumme};
                rowAngebotSagePositionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAngebotSagePositionRow);
                return rowAngebotSagePositionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AngebotSagePositionDataTable cln = ((AngebotSagePositionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AngebotSagePositionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSequence = base.Columns["Sequence"];
                this.columnVorgangsnummerTemporaer = base.Columns["VorgangsnummerTemporaer"];
                this.columnPositionstyp = base.Columns["Positionstyp"];
                this.columnPositionsart = base.Columns["Positionsart"];
                this.columnArtikelnummer = base.Columns["Artikelnummer"];
                this.columnStuecklistennummer = base.Columns["Stuecklistennummer"];
                this.columnBezeichnung1 = base.Columns["Bezeichnung1"];
                this.columnBezeichnung2 = base.Columns["Bezeichnung2"];
                this.columnHersteller = base.Columns["Hersteller"];
                this.columnMenge = base.Columns["Menge"];
                this.columnEinzelpreis = base.Columns["Einzelpreis"];
                this.columnGesamtpreis = base.Columns["Gesamtpreis"];
                this.columnMengeneinheit = base.Columns["Mengeneinheit"];
                this.columnLangtext = base.Columns["Langtext"];
                this.columnAnker_RTFMemo = base.Columns["Anker_RTFMemo"];
                this.columnZwischensumme = base.Columns["Zwischensumme"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSequence = new global::System.Data.DataColumn("Sequence", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequence);
                this.columnVorgangsnummerTemporaer = new global::System.Data.DataColumn("VorgangsnummerTemporaer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVorgangsnummerTemporaer);
                this.columnPositionstyp = new global::System.Data.DataColumn("Positionstyp", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionstyp);
                this.columnPositionsart = new global::System.Data.DataColumn("Positionsart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionsart);
                this.columnArtikelnummer = new global::System.Data.DataColumn("Artikelnummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArtikelnummer);
                this.columnStuecklistennummer = new global::System.Data.DataColumn("Stuecklistennummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStuecklistennummer);
                this.columnBezeichnung1 = new global::System.Data.DataColumn("Bezeichnung1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBezeichnung1);
                this.columnBezeichnung2 = new global::System.Data.DataColumn("Bezeichnung2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBezeichnung2);
                this.columnHersteller = new global::System.Data.DataColumn("Hersteller", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHersteller);
                this.columnMenge = new global::System.Data.DataColumn("Menge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenge);
                this.columnEinzelpreis = new global::System.Data.DataColumn("Einzelpreis", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEinzelpreis);
                this.columnGesamtpreis = new global::System.Data.DataColumn("Gesamtpreis", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGesamtpreis);
                this.columnMengeneinheit = new global::System.Data.DataColumn("Mengeneinheit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMengeneinheit);
                this.columnLangtext = new global::System.Data.DataColumn("Langtext", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLangtext);
                this.columnAnker_RTFMemo = new global::System.Data.DataColumn("Anker_RTFMemo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnker_RTFMemo);
                this.columnZwischensumme = new global::System.Data.DataColumn("Zwischensumme", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZwischensumme);
                this.columnSequence.AllowDBNull = false;
                this.columnVorgangsnummerTemporaer.AllowDBNull = false;
                this.columnVorgangsnummerTemporaer.MaxLength = 11;
                this.columnPositionstyp.AllowDBNull = false;
                this.columnPositionsart.AllowDBNull = false;
                this.columnPositionsart.MaxLength = 1;
                this.columnArtikelnummer.AllowDBNull = false;
                this.columnArtikelnummer.MaxLength = 20;
                this.columnStuecklistennummer.AllowDBNull = false;
                this.columnStuecklistennummer.MaxLength = 20;
                this.columnBezeichnung1.AllowDBNull = false;
                this.columnBezeichnung1.MaxLength = 50;
                this.columnBezeichnung2.AllowDBNull = false;
                this.columnBezeichnung2.MaxLength = 50;
                this.columnHersteller.AllowDBNull = false;
                this.columnHersteller.MaxLength = 10;
                this.columnEinzelpreis.AllowDBNull = false;
                this.columnGesamtpreis.AllowDBNull = false;
                this.columnMengeneinheit.AllowDBNull = false;
                this.columnMengeneinheit.MaxLength = 4;
                this.columnLangtext.AllowDBNull = false;
                this.columnLangtext.MaxLength = 60;
                this.columnAnker_RTFMemo.AllowDBNull = false;
                this.columnZwischensumme.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSagePositionRow NewAngebotSagePositionRow() {
                return ((AngebotSagePositionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AngebotSagePositionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AngebotSagePositionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AngebotSagePositionRowChanged != null)) {
                    this.AngebotSagePositionRowChanged(this, new AngebotSagePositionRowChangeEvent(((AngebotSagePositionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AngebotSagePositionRowChanging != null)) {
                    this.AngebotSagePositionRowChanging(this, new AngebotSagePositionRowChangeEvent(((AngebotSagePositionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AngebotSagePositionRowDeleted != null)) {
                    this.AngebotSagePositionRowDeleted(this, new AngebotSagePositionRowChangeEvent(((AngebotSagePositionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AngebotSagePositionRowDeleting != null)) {
                    this.AngebotSagePositionRowDeleting(this, new AngebotSagePositionRowChangeEvent(((AngebotSagePositionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAngebotSagePositionRow(AngebotSagePositionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AngebotSagePositionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SystemMemoDataTable : global::System.Data.TypedTableBase<SystemMemoRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnContent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoDataTable() {
                this.TableName = "SystemMemo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SystemMemoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SystemMemoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoRow this[int index] {
                get {
                    return ((SystemMemoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemMemoRowChangeEventHandler SystemMemoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemMemoRowChangeEventHandler SystemMemoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemMemoRowChangeEventHandler SystemMemoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemMemoRowChangeEventHandler SystemMemoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSystemMemoRow(SystemMemoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoRow AddSystemMemoRow(int ID, string Content) {
                SystemMemoRow rowSystemMemoRow = ((SystemMemoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Content};
                rowSystemMemoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSystemMemoRow);
                return rowSystemMemoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoRow FindByID(int ID) {
                return ((SystemMemoRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SystemMemoDataTable cln = ((SystemMemoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SystemMemoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnContent = base.Columns["Content"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnContent.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoRow NewSystemMemoRow() {
                return ((SystemMemoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SystemMemoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SystemMemoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SystemMemoRowChanged != null)) {
                    this.SystemMemoRowChanged(this, new SystemMemoRowChangeEvent(((SystemMemoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SystemMemoRowChanging != null)) {
                    this.SystemMemoRowChanging(this, new SystemMemoRowChangeEvent(((SystemMemoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SystemMemoRowDeleted != null)) {
                    this.SystemMemoRowDeleted(this, new SystemMemoRowChangeEvent(((SystemMemoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SystemMemoRowDeleting != null)) {
                    this.SystemMemoRowDeleting(this, new SystemMemoRowChangeEvent(((SystemMemoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSystemMemoRow(SystemMemoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SystemMemoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SalesRow : global::System.Data.DataRow {
            
            private SalesDataTable tableSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSales = ((SalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Artikel {
                get {
                    return ((string)(this[this.tableSales.ArtikelColumn]));
                }
                set {
                    this[this.tableSales.ArtikelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bezeichnung1 {
                get {
                    return ((string)(this[this.tableSales.Bezeichnung1Column]));
                }
                set {
                    this[this.tableSales.Bezeichnung1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Umsatz {
                get {
                    try {
                        return ((decimal)(this[this.tableSales.UmsatzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Umsatz\' in table \'Sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSales.UmsatzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Anzahl {
                get {
                    try {
                        return ((double)(this[this.tableSales.AnzahlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anzahl\' in table \'Sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSales.AnzahlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Datum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSales.DatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datum\' in table \'Sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSales.DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzNull() {
                return this.IsNull(this.tableSales.UmsatzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzNull() {
                this[this.tableSales.UmsatzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnzahlNull() {
                return this.IsNull(this.tableSales.AnzahlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnzahlNull() {
                this[this.tableSales.AnzahlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatumNull() {
                return this.IsNull(this.tableSales.DatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatumNull() {
                this[this.tableSales.DatumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VersandkostenstaffelRow : global::System.Data.DataRow {
            
            private VersandkostenstaffelDataTable tableVersandkostenstaffel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VersandkostenstaffelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVersandkostenstaffel = ((VersandkostenstaffelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kundennummer {
                get {
                    return ((string)(this[this.tableVersandkostenstaffel.KundennummerColumn]));
                }
                set {
                    this[this.tableVersandkostenstaffel.KundennummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AbWert1 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.AbWert1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbWert1\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.AbWert1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VKosten1 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.VKosten1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VKosten1\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.VKosten1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AbWert2 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.AbWert2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbWert2\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.AbWert2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VKosten2 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.VKosten2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VKosten2\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.VKosten2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AbWert3 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.AbWert3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbWert3\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.AbWert3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VKosten3 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.VKosten3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VKosten3\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.VKosten3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AbWert4 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.AbWert4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbWert4\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.AbWert4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VKosten4 {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.VKosten4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VKosten4\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.VKosten4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Kosten {
                get {
                    try {
                        return ((decimal)(this[this.tableVersandkostenstaffel.KostenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kosten\' in table \'Versandkostenstaffel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersandkostenstaffel.KostenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbWert1Null() {
                return this.IsNull(this.tableVersandkostenstaffel.AbWert1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbWert1Null() {
                this[this.tableVersandkostenstaffel.AbWert1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVKosten1Null() {
                return this.IsNull(this.tableVersandkostenstaffel.VKosten1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVKosten1Null() {
                this[this.tableVersandkostenstaffel.VKosten1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbWert2Null() {
                return this.IsNull(this.tableVersandkostenstaffel.AbWert2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbWert2Null() {
                this[this.tableVersandkostenstaffel.AbWert2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVKosten2Null() {
                return this.IsNull(this.tableVersandkostenstaffel.VKosten2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVKosten2Null() {
                this[this.tableVersandkostenstaffel.VKosten2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbWert3Null() {
                return this.IsNull(this.tableVersandkostenstaffel.AbWert3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbWert3Null() {
                this[this.tableVersandkostenstaffel.AbWert3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVKosten3Null() {
                return this.IsNull(this.tableVersandkostenstaffel.VKosten3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVKosten3Null() {
                this[this.tableVersandkostenstaffel.VKosten3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbWert4Null() {
                return this.IsNull(this.tableVersandkostenstaffel.AbWert4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbWert4Null() {
                this[this.tableVersandkostenstaffel.AbWert4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVKosten4Null() {
                return this.IsNull(this.tableVersandkostenstaffel.VKosten4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVKosten4Null() {
                this[this.tableVersandkostenstaffel.VKosten4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKostenNull() {
                return this.IsNull(this.tableVersandkostenstaffel.KostenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKostenNull() {
                this[this.tableVersandkostenstaffel.KostenColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OffenePostenRow : global::System.Data.DataRow {
            
            private OffenePostenDataTable tableOffenePosten;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OffenePostenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOffenePosten = ((OffenePostenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kundennummer {
                get {
                    return ((string)(this[this.tableOffenePosten.KundennummerColumn]));
                }
                set {
                    this[this.tableOffenePosten.KundennummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Belegnummer {
                get {
                    return ((string)(this[this.tableOffenePosten.BelegnummerColumn]));
                }
                set {
                    this[this.tableOffenePosten.BelegnummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Belegdatum {
                get {
                    return ((global::System.DateTime)(this[this.tableOffenePosten.BelegdatumColumn]));
                }
                set {
                    this[this.tableOffenePosten.BelegdatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Nettozahlungsziel {
                get {
                    return ((short)(this[this.tableOffenePosten.NettozahlungszielColumn]));
                }
                set {
                    this[this.tableOffenePosten.NettozahlungszielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Rechnungsbetr_InOP_Waehrung {
                get {
                    return ((decimal)(this[this.tableOffenePosten.Rechnungsbetr_InOP_WaehrungColumn]));
                }
                set {
                    this[this.tableOffenePosten.Rechnungsbetr_InOP_WaehrungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ZahlbetragInOP_Waehrung {
                get {
                    return ((decimal)(this[this.tableOffenePosten.ZahlbetragInOP_WaehrungColumn]));
                }
                set {
                    this[this.tableOffenePosten.ZahlbetragInOP_WaehrungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mahnkennzeichen {
                get {
                    return ((string)(this[this.tableOffenePosten.MahnkennzeichenColumn]));
                }
                set {
                    this[this.tableOffenePosten.MahnkennzeichenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DatumLetzteMahnung {
                get {
                    return ((global::System.DateTime)(this[this.tableOffenePosten.DatumLetzteMahnungColumn]));
                }
                set {
                    this[this.tableOffenePosten.DatumLetzteMahnungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Saldo_InOP_Waehrung {
                get {
                    return ((decimal)(this[this.tableOffenePosten.Saldo_InOP_WaehrungColumn]));
                }
                set {
                    this[this.tableOffenePosten.Saldo_InOP_WaehrungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OverdueDays {
                get {
                    try {
                        return ((long)(this[this.tableOffenePosten.OverdueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueDays\' in table \'OffenePosten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOffenePosten.OverdueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverdueDaysNull() {
                return this.IsNull(this.tableOffenePosten.OverdueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverdueDaysNull() {
                this[this.tableOffenePosten.OverdueDaysColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SalesStatsBaseRow : global::System.Data.DataRow {
            
            private SalesStatsBaseDataTable tableSalesStatsBase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesStatsBaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesStatsBase = ((SalesStatsBaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jahr {
                get {
                    return ((int)(this[this.tableSalesStatsBase.JahrColumn]));
                }
                set {
                    this[this.tableSalesStatsBase.JahrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kundennummer {
                get {
                    return ((string)(this[this.tableSalesStatsBase.KundennummerColumn]));
                }
                set {
                    this[this.tableSalesStatsBase.KundennummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzJanuar {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzJanuarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzJanuar\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzJanuarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeJanuar {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeJanuarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeJanuar\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeJanuarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnJanuarAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnJanuarAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnJanuarAbsolut\' in table \'SalesStatsBase\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnJanuarAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnJanuarProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnJanuarProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnJanuarProzent\' in table \'SalesStatsBase\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnJanuarProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzFebruar {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzFebruarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzFebruar\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzFebruarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeFebruar {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeFebruarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeFebruar\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeFebruarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnFebruarAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnFebruarAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnFebruarAbsolut\' in table \'SalesStatsBase\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnFebruarAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnFebruarProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnFebruarProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnFebruarProzent\' in table \'SalesStatsBase\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnFebruarProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzMaerz {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzMaerzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzMaerz\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzMaerzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeMaerz {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeMaerzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeMaerz\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeMaerzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnMaerzAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnMaerzAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnMaerzAbsolut\' in table \'SalesStatsBase\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnMaerzAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnMaerzProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnMaerzProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnMaerzProzent\' in table \'SalesStatsBase\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnMaerzProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzApril {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzAprilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzApril\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzAprilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeApril {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeAprilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeApril\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeAprilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnAprilAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnAprilAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnAprilAbsolut\' in table \'SalesStatsBase\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnAprilAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnAprilProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnAprilProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnAprilProzent\' in table \'SalesStatsBase\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnAprilProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzMai {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzMaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzMai\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzMaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeMai {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeMaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeMai\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeMaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnMaiAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnMaiAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnMaiAbsolut\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnMaiAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnMaiProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnMaiProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnMaiProzent\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnMaiProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzJuni {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzJuniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzJuni\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzJuniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeJuni {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeJuniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeJuni\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeJuniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnJuniAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnJuniAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnJuniAbsolut\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnJuniAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnJuniProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnJuniProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnJuniProzent\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnJuniProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzJuli {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzJuliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzJuli\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzJuliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeJuli {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeJuliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeJuli\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeJuliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnJuliAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnJuliAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnJuliAbsolut\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnJuliAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnJuliProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnJuliProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnJuliProzent\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnJuliProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzAugust {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzAugustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzAugust\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzAugustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeAugust {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeAugustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeAugust\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeAugustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnAugustAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnAugustAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnAugustAbsolut\' in table \'SalesStatsBase\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnAugustAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnAugustProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnAugustProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnAugustProzent\' in table \'SalesStatsBase\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnAugustProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzSeptember {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzSeptemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzSeptember\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzSeptemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeSeptember {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeSeptemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeSeptember\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeSeptemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnSeptemberAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnSeptemberAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnSeptemberAbsolut\' in table \'SalesStatsBase\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnSeptemberAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnSeptemberProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnSeptemberProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnSeptemberProzent\' in table \'SalesStatsBase\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnSeptemberProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzOktober {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzOktoberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzOktober\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzOktoberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeOktober {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeOktoberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeOktober\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeOktoberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnOktoberAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnOktoberAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnOktoberAbsolut\' in table \'SalesStatsBase\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnOktoberAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnOktoberProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnOktoberProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnOktoberProzent\' in table \'SalesStatsBase\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnOktoberProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzNovember {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzNovemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzNovember\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzNovemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeNovember {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeNovemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeNovember\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeNovemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnNovemberAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnNovemberAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnNovemberAbsolut\' in table \'SalesStatsBase\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnNovemberAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnNovemberProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnNovemberProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnNovemberProzent\' in table \'SalesStatsBase\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnNovemberProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UmsatzDezember {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.UmsatzDezemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmsatzDezember\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.UmsatzDezemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MengeDezember {
                get {
                    try {
                        return ((double)(this[this.tableSalesStatsBase.MengeDezemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MengeDezember\' in table \'SalesStatsBase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.MengeDezemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnDezemberAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnDezemberAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnDezemberAbsolut\' in table \'SalesStatsBase\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnDezemberAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnDezemberProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStatsBase.RohgewinnDezemberProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnDezemberProzent\' in table \'SalesStatsBase\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesStatsBase.RohgewinnDezemberProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzJanuarNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzJanuarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzJanuarNull() {
                this[this.tableSalesStatsBase.UmsatzJanuarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeJanuarNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeJanuarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeJanuarNull() {
                this[this.tableSalesStatsBase.MengeJanuarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnJanuarAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnJanuarAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnJanuarAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnJanuarAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnJanuarProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnJanuarProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnJanuarProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnJanuarProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzFebruarNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzFebruarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzFebruarNull() {
                this[this.tableSalesStatsBase.UmsatzFebruarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeFebruarNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeFebruarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeFebruarNull() {
                this[this.tableSalesStatsBase.MengeFebruarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnFebruarAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnFebruarAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnFebruarAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnFebruarAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnFebruarProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnFebruarProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnFebruarProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnFebruarProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzMaerzNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzMaerzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzMaerzNull() {
                this[this.tableSalesStatsBase.UmsatzMaerzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeMaerzNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeMaerzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeMaerzNull() {
                this[this.tableSalesStatsBase.MengeMaerzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnMaerzAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnMaerzAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnMaerzAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnMaerzAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnMaerzProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnMaerzProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnMaerzProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnMaerzProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzAprilNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzAprilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzAprilNull() {
                this[this.tableSalesStatsBase.UmsatzAprilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeAprilNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeAprilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeAprilNull() {
                this[this.tableSalesStatsBase.MengeAprilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnAprilAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnAprilAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnAprilAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnAprilAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnAprilProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnAprilProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnAprilProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnAprilProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzMaiNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzMaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzMaiNull() {
                this[this.tableSalesStatsBase.UmsatzMaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeMaiNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeMaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeMaiNull() {
                this[this.tableSalesStatsBase.MengeMaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnMaiAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnMaiAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnMaiAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnMaiAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnMaiProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnMaiProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnMaiProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnMaiProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzJuniNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzJuniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzJuniNull() {
                this[this.tableSalesStatsBase.UmsatzJuniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeJuniNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeJuniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeJuniNull() {
                this[this.tableSalesStatsBase.MengeJuniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnJuniAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnJuniAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnJuniAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnJuniAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnJuniProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnJuniProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnJuniProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnJuniProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzJuliNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzJuliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzJuliNull() {
                this[this.tableSalesStatsBase.UmsatzJuliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeJuliNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeJuliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeJuliNull() {
                this[this.tableSalesStatsBase.MengeJuliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnJuliAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnJuliAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnJuliAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnJuliAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnJuliProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnJuliProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnJuliProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnJuliProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzAugustNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzAugustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzAugustNull() {
                this[this.tableSalesStatsBase.UmsatzAugustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeAugustNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeAugustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeAugustNull() {
                this[this.tableSalesStatsBase.MengeAugustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnAugustAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnAugustAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnAugustAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnAugustAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnAugustProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnAugustProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnAugustProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnAugustProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzSeptemberNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzSeptemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzSeptemberNull() {
                this[this.tableSalesStatsBase.UmsatzSeptemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeSeptemberNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeSeptemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeSeptemberNull() {
                this[this.tableSalesStatsBase.MengeSeptemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnSeptemberAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnSeptemberAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnSeptemberAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnSeptemberAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnSeptemberProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnSeptemberProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnSeptemberProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnSeptemberProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzOktoberNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzOktoberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzOktoberNull() {
                this[this.tableSalesStatsBase.UmsatzOktoberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeOktoberNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeOktoberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeOktoberNull() {
                this[this.tableSalesStatsBase.MengeOktoberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnOktoberAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnOktoberAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnOktoberAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnOktoberAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnOktoberProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnOktoberProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnOktoberProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnOktoberProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzNovemberNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzNovemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzNovemberNull() {
                this[this.tableSalesStatsBase.UmsatzNovemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeNovemberNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeNovemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeNovemberNull() {
                this[this.tableSalesStatsBase.MengeNovemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnNovemberAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnNovemberAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnNovemberAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnNovemberAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnNovemberProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnNovemberProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnNovemberProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnNovemberProzentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzDezemberNull() {
                return this.IsNull(this.tableSalesStatsBase.UmsatzDezemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzDezemberNull() {
                this[this.tableSalesStatsBase.UmsatzDezemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeDezemberNull() {
                return this.IsNull(this.tableSalesStatsBase.MengeDezemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeDezemberNull() {
                this[this.tableSalesStatsBase.MengeDezemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnDezemberAbsolutNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnDezemberAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnDezemberAbsolutNull() {
                this[this.tableSalesStatsBase.RohgewinnDezemberAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnDezemberProzentNull() {
                return this.IsNull(this.tableSalesStatsBase.RohgewinnDezemberProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnDezemberProzentNull() {
                this[this.tableSalesStatsBase.RohgewinnDezemberProzentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SalesStatsRow : global::System.Data.DataRow {
            
            private SalesStatsDataTable tableSalesStats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesStatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesStats = ((SalesStatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kundennummer {
                get {
                    return ((string)(this[this.tableSalesStats.KundennummerColumn]));
                }
                set {
                    this[this.tableSalesStats.KundennummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Datum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesStats.DatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datum\' in table \'SalesStats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStats.DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Umsatz {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStats.UmsatzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Umsatz\' in table \'SalesStats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStats.UmsatzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Menge {
                get {
                    try {
                        return ((double)(this[this.tableSalesStats.MengeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Menge\' in table \'SalesStats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStats.MengeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnAbsolut {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStats.RohgewinnAbsolutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnAbsolut\' in table \'SalesStats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStats.RohgewinnAbsolutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RohgewinnProzent {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesStats.RohgewinnProzentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RohgewinnProzent\' in table \'SalesStats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesStats.RohgewinnProzentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatumNull() {
                return this.IsNull(this.tableSalesStats.DatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatumNull() {
                this[this.tableSalesStats.DatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUmsatzNull() {
                return this.IsNull(this.tableSalesStats.UmsatzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUmsatzNull() {
                this[this.tableSalesStats.UmsatzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeNull() {
                return this.IsNull(this.tableSalesStats.MengeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeNull() {
                this[this.tableSalesStats.MengeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnAbsolutNull() {
                return this.IsNull(this.tableSalesStats.RohgewinnAbsolutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnAbsolutNull() {
                this[this.tableSalesStats.RohgewinnAbsolutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRohgewinnProzentNull() {
                return this.IsNull(this.tableSalesStats.RohgewinnProzentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRohgewinnProzentNull() {
                this[this.tableSalesStats.RohgewinnProzentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AngebotSageRow : global::System.Data.DataRow {
            
            private AngebotSageDataTable tableAngebotSage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AngebotSageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAngebotSage = ((AngebotSageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nummer {
                get {
                    return ((string)(this[this.tableAngebotSage.NummerColumn]));
                }
                set {
                    this[this.tableAngebotSage.NummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Datum {
                get {
                    return ((global::System.DateTime)(this[this.tableAngebotSage.DatumColumn]));
                }
                set {
                    this[this.tableAngebotSage.DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kundennummer {
                get {
                    return ((string)(this[this.tableAngebotSage.KundennummerColumn]));
                }
                set {
                    this[this.tableAngebotSage.KundennummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vertreter1 {
                get {
                    return ((string)(this[this.tableAngebotSage.Vertreter1Column]));
                }
                set {
                    this[this.tableAngebotSage.Vertreter1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rechnungskunde {
                get {
                    return ((string)(this[this.tableAngebotSage.RechnungskundeColumn]));
                }
                set {
                    this[this.tableAngebotSage.RechnungskundeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SummeZKD1_USt_1 {
                get {
                    return ((decimal)(this[this.tableAngebotSage.SummeZKD1_USt_1Column]));
                }
                set {
                    this[this.tableAngebotSage.SummeZKD1_USt_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SummeZKD2_USt_1 {
                get {
                    return ((decimal)(this[this.tableAngebotSage.SummeZKD2_USt_1Column]));
                }
                set {
                    this[this.tableAngebotSage.SummeZKD2_USt_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bruttosumme {
                get {
                    return ((decimal)(this[this.tableAngebotSage.BruttosummeColumn]));
                }
                set {
                    this[this.tableAngebotSage.BruttosummeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Roherloes {
                get {
                    return ((decimal)(this[this.tableAngebotSage.RoherloesColumn]));
                }
                set {
                    this[this.tableAngebotSage.RoherloesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Gesamtrabatt {
                get {
                    return ((decimal)(this[this.tableAngebotSage.GesamtrabattColumn]));
                }
                set {
                    this[this.tableAngebotSage.GesamtrabattColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ansprechpartnernummer {
                get {
                    return ((string)(this[this.tableAngebotSage.AnsprechpartnernummerColumn]));
                }
                set {
                    this[this.tableAngebotSage.AnsprechpartnernummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SteuersatzSumme1 {
                get {
                    return ((decimal)(this[this.tableAngebotSage.SteuersatzSumme1Column]));
                }
                set {
                    this[this.tableAngebotSage.SteuersatzSumme1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Timestamp_Datum {
                get {
                    return ((global::System.DateTime)(this[this.tableAngebotSage.Timestamp_DatumColumn]));
                }
                set {
                    this[this.tableAngebotSage.Timestamp_DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Timestamp_Zeit {
                get {
                    return ((global::System.TimeSpan)(this[this.tableAngebotSage.Timestamp_ZeitColumn]));
                }
                set {
                    this[this.tableAngebotSage.Timestamp_ZeitColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AngebotSagePositionRow : global::System.Data.DataRow {
            
            private AngebotSagePositionDataTable tableAngebotSagePosition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AngebotSagePositionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAngebotSagePosition = ((AngebotSagePositionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Sequence {
                get {
                    return ((decimal)(this[this.tableAngebotSagePosition.SequenceColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.SequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VorgangsnummerTemporaer {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.VorgangsnummerTemporaerColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.VorgangsnummerTemporaerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Positionstyp {
                get {
                    return ((short)(this[this.tableAngebotSagePosition.PositionstypColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.PositionstypColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Positionsart {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.PositionsartColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.PositionsartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Artikelnummer {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.ArtikelnummerColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.ArtikelnummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Stuecklistennummer {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.StuecklistennummerColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.StuecklistennummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bezeichnung1 {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.Bezeichnung1Column]));
                }
                set {
                    this[this.tableAngebotSagePosition.Bezeichnung1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bezeichnung2 {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.Bezeichnung2Column]));
                }
                set {
                    this[this.tableAngebotSagePosition.Bezeichnung2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hersteller {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.HerstellerColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.HerstellerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Menge {
                get {
                    try {
                        return ((double)(this[this.tableAngebotSagePosition.MengeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Menge\' in table \'AngebotSagePosition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAngebotSagePosition.MengeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Einzelpreis {
                get {
                    return ((decimal)(this[this.tableAngebotSagePosition.EinzelpreisColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.EinzelpreisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Gesamtpreis {
                get {
                    return ((decimal)(this[this.tableAngebotSagePosition.GesamtpreisColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.GesamtpreisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mengeneinheit {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.MengeneinheitColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.MengeneinheitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Langtext {
                get {
                    return ((string)(this[this.tableAngebotSagePosition.LangtextColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.LangtextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Anker_RTFMemo {
                get {
                    return ((int)(this[this.tableAngebotSagePosition.Anker_RTFMemoColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.Anker_RTFMemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Zwischensumme {
                get {
                    return ((decimal)(this[this.tableAngebotSagePosition.ZwischensummeColumn]));
                }
                set {
                    this[this.tableAngebotSagePosition.ZwischensummeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMengeNull() {
                return this.IsNull(this.tableAngebotSagePosition.MengeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMengeNull() {
                this[this.tableAngebotSagePosition.MengeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SystemMemoRow : global::System.Data.DataRow {
            
            private SystemMemoDataTable tableSystemMemo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SystemMemoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSystemMemo = ((SystemMemoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableSystemMemo.IDColumn]));
                }
                set {
                    this[this.tableSystemMemo.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Content {
                get {
                    return ((string)(this[this.tableSystemMemo.ContentColumn]));
                }
                set {
                    this[this.tableSystemMemo.ContentColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SalesRowChangeEvent : global::System.EventArgs {
            
            private SalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesRowChangeEvent(SalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VersandkostenstaffelRowChangeEvent : global::System.EventArgs {
            
            private VersandkostenstaffelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VersandkostenstaffelRowChangeEvent(VersandkostenstaffelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VersandkostenstaffelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OffenePostenRowChangeEvent : global::System.EventArgs {
            
            private OffenePostenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OffenePostenRowChangeEvent(OffenePostenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OffenePostenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SalesStatsBaseRowChangeEvent : global::System.EventArgs {
            
            private SalesStatsBaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsBaseRowChangeEvent(SalesStatsBaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsBaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SalesStatsRowChangeEvent : global::System.EventArgs {
            
            private SalesStatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsRowChangeEvent(SalesStatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesStatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AngebotSageRowChangeEvent : global::System.EventArgs {
            
            private AngebotSageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageRowChangeEvent(AngebotSageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AngebotSagePositionRowChangeEvent : global::System.EventArgs {
            
            private AngebotSagePositionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSagePositionRowChangeEvent(AngebotSagePositionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AngebotSagePositionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SystemMemoRowChangeEvent : global::System.EventArgs {
            
            private SystemMemoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoRowChangeEvent(SystemMemoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemMemoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Products.Data.Datasets.dsSalesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taSales : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taSales() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Sales";
            tableMapping.ColumnMappings.Add("Artikel", "Artikel");
            tableMapping.ColumnMappings.Add("Bezeichnung1", "Bezeichnung1");
            tableMapping.ColumnMappings.Add("Umsatz", "Umsatz");
            tableMapping.ColumnMappings.Add("Anzahl", "Anzahl");
            tableMapping.ColumnMappings.Add("Datum", "Datum");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 
  ar.Artikel, 
  ar.Bezeichnung1, 
  SUM(p.Menge / POWER(10, p.MengeNachkommastellen)) AS Anzahl, 
  SUM(p.Gesamtpreis) AS Umsatz, 
  MAX(Datum) AS Datum
FROM 
  auftraege as a INNER JOIN auftraegepositionen AS p on (a.Nummer = p.VorgangsnummerTemporaer 
AND a.Vorgang = p.VorgangspresetTemporaer) INNER JOIN artikel AS ar ON ar.Artikel = p.Artikelnummer 
WHERE 
  ((a.Kundennummer = @CustomerId) 
AND (a.Vorgang = p.VorgangspresetTemporaer) 
AND (a.Vorgang = 'A') AND (p.Positionsart = 'E') 
AND (Positionstyp = 1 OR Positionstyp = 2)) 
GROUP BY 
  p.Artikelnummer

UNION

SELECT 
  p.Stuecklistennummer, 
  sl.Bezeichnung1, 
  SUM(p.Menge / POWER(10, p.MengeNachkommastellen)) AS Anzahl, 
  SUM(p.Gesamtpreis) AS Umsatz, 
  MAX(Datum) AS Datum
FROM 
  auftraege as a INNER JOIN auftraegepositionen AS p on (a.Nummer = p.VorgangsnummerTemporaer 
AND a.Vorgang = p.VorgangspresetTemporaer) INNER JOIN stuecklisten AS sl ON sl.Stuecklistennummer = p.Stuecklistennummer 
WHERE 
  ((a.Kundennummer = @CustomerId) 
AND (a.Vorgang = p.VorgangspresetTemporaer) 
AND (a.Vorgang = 'A') AND (p.Positionsart = 'E') 
AND (Positionstyp = 1 OR Positionstyp = 2)) 
GROUP BY 
  p.Stuecklistennummer ORDER BY Datum DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CustomerId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "Kundennummer";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.SalesDataTable dataTable, string CustomerId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustomerId == null)) {
                throw new global::System.ArgumentNullException("CustomerId");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CustomerId));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.SalesDataTable GetData(string CustomerId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustomerId == null)) {
                throw new global::System.ArgumentNullException("CustomerId");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CustomerId));
            }
            dsSales.SalesDataTable dataTable = new dsSales.SalesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taVersandkostenstaffel : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taVersandkostenstaffel() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Versandkostenstaffel";
            tableMapping.ColumnMappings.Add("AbWert1", "AbWert1");
            tableMapping.ColumnMappings.Add("Kundennummer", "Kundennummer");
            tableMapping.ColumnMappings.Add("VKosten1", "VKosten1");
            tableMapping.ColumnMappings.Add("AbWert2", "AbWert2");
            tableMapping.ColumnMappings.Add("VKosten2", "VKosten2");
            tableMapping.ColumnMappings.Add("AbWert3", "AbWert3");
            tableMapping.ColumnMappings.Add("VKosten3", "VKosten3");
            tableMapping.ColumnMappings.Add("AbWert4", "AbWert4");
            tableMapping.ColumnMappings.Add("VKosten4", "VKosten4");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 
IFNULL(Kundennummer, 'Total') AS Kundennummer, 
AbWert1, 
VKosten1, 
AbWert2, 
VKosten2, 
AbWert3, 
VKosten3, 
AbWert4, 
VKosten4
FROM 
(SELECT 
Nummer AS Kundennummer, 
MAX(AbVergleichswert1 / 119) AS AbWert1, 
MAX(ZuBerechnenderPreis1) AS VKosten1, 
MAX(AbVergleichswert2 / 119) AS AbWert2, 
MAX(ZuBerechnenderPreis2) AS VKosten2, 
MAX(AbVergleichswert3 / 119) AS AbWert3, 
MAX(ZuBerechnenderPreis3) AS VKosten3, 
MAX(AbVergleichswert4 / 119) AS AbWert4, 
MAX(ZuBerechnenderPreis4) AS VKosten4
FROM kundenversandkostenstaffeln
GROUP BY Nummer WITH ROLLUP) AS Versandkosten";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.VersandkostenstaffelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.VersandkostenstaffelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSales.VersandkostenstaffelDataTable dataTable = new dsSales.VersandkostenstaffelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taOffenePosten : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taOffenePosten() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OffenePosten";
            tableMapping.ColumnMappings.Add("Kundennummer", "Kundennummer");
            tableMapping.ColumnMappings.Add("Belegnummer", "Belegnummer");
            tableMapping.ColumnMappings.Add("Belegdatum", "Belegdatum");
            tableMapping.ColumnMappings.Add("Nettozahlungsziel", "Nettozahlungsziel");
            tableMapping.ColumnMappings.Add("Rechnungsbetr_InOP_Waehrung", "Rechnungsbetr_InOP_Waehrung");
            tableMapping.ColumnMappings.Add("ZahlbetragInOP_Waehrung", "ZahlbetragInOP_Waehrung");
            tableMapping.ColumnMappings.Add("Mahnkennzeichen", "Mahnkennzeichen");
            tableMapping.ColumnMappings.Add("DatumLetzteMahnung", "DatumLetzteMahnung");
            tableMapping.ColumnMappings.Add("Saldo_InOP_Waehrung", "Saldo_InOP_Waehrung");
            tableMapping.ColumnMappings.Add("OverdueDays", "OverdueDays");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 
  Kontonummer AS Kundennummer, 
  Belegnummer, Belegdatum, 
  Nettozahlungsziel, 
  Rechnungsbetr_InOP_Waehrung, 
  ZahlbetragInOP_Waehrung, Mahnkennzeichen, 
  DatumLetzteMahnung, 
  Saldo_InOP_Waehrung, 
  (TO_DAYS(CURDATE()) - TO_DAYS(Belegdatum)) AS OverdueDays
FROM 
  opdebitoren 
WHERE 
          (Rechnungsbetr_InOP_Waehrung - ZahlbetragInOP_Waehrung > 0) 
AND (Kontonummer = @CustomerId) 
ORDER BY 
  OverdueDays DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CustomerId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "Kundennummer";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.OffenePostenDataTable dataTable, string CustomerId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustomerId == null)) {
                throw new global::System.ArgumentNullException("CustomerId");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CustomerId));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.OffenePostenDataTable GetData(string CustomerId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustomerId == null)) {
                throw new global::System.ArgumentNullException("CustomerId");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CustomerId));
            }
            dsSales.OffenePostenDataTable dataTable = new dsSales.OffenePostenDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taSalesStatsBase : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taSalesStatsBase() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SalesStatsBase";
            tableMapping.ColumnMappings.Add("Jahr", "Jahr");
            tableMapping.ColumnMappings.Add("Kundennummer", "Kundennummer");
            tableMapping.ColumnMappings.Add("UmsatzJanuar", "UmsatzJanuar");
            tableMapping.ColumnMappings.Add("MengeJanuar", "MengeJanuar");
            tableMapping.ColumnMappings.Add("RohgewinnJanuarAbsolut", "RohgewinnJanuarAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnJanuarProzent", "RohgewinnJanuarProzent");
            tableMapping.ColumnMappings.Add("UmsatzFebruar", "UmsatzFebruar");
            tableMapping.ColumnMappings.Add("MengeFebruar", "MengeFebruar");
            tableMapping.ColumnMappings.Add("RohgewinnFebruarAbsolut", "RohgewinnFebruarAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnFebruarProzent", "RohgewinnFebruarProzent");
            tableMapping.ColumnMappings.Add("UmsatzMaerz", "UmsatzMaerz");
            tableMapping.ColumnMappings.Add("MengeMaerz", "MengeMaerz");
            tableMapping.ColumnMappings.Add("RohgewinnMaerzAbsolut", "RohgewinnMaerzAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnMaerzProzent", "RohgewinnMaerzProzent");
            tableMapping.ColumnMappings.Add("UmsatzApril", "UmsatzApril");
            tableMapping.ColumnMappings.Add("MengeApril", "MengeApril");
            tableMapping.ColumnMappings.Add("RohgewinnAprilAbsolut", "RohgewinnAprilAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnAprilProzent", "RohgewinnAprilProzent");
            tableMapping.ColumnMappings.Add("UmsatzMai", "UmsatzMai");
            tableMapping.ColumnMappings.Add("MengeMai", "MengeMai");
            tableMapping.ColumnMappings.Add("RohgewinnMaiAbsolut", "RohgewinnMaiAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnMaiProzent", "RohgewinnMaiProzent");
            tableMapping.ColumnMappings.Add("UmsatzJuni", "UmsatzJuni");
            tableMapping.ColumnMappings.Add("MengeJuni", "MengeJuni");
            tableMapping.ColumnMappings.Add("RohgewinnJuniAbsolut", "RohgewinnJuniAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnJuniProzent", "RohgewinnJuniProzent");
            tableMapping.ColumnMappings.Add("UmsatzJuli", "UmsatzJuli");
            tableMapping.ColumnMappings.Add("MengeJuli", "MengeJuli");
            tableMapping.ColumnMappings.Add("RohgewinnJuliAbsolut", "RohgewinnJuliAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnJuliProzent", "RohgewinnJuliProzent");
            tableMapping.ColumnMappings.Add("UmsatzAugust", "UmsatzAugust");
            tableMapping.ColumnMappings.Add("MengeAugust", "MengeAugust");
            tableMapping.ColumnMappings.Add("RohgewinnAugustAbsolut", "RohgewinnAugustAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnAugustProzent", "RohgewinnAugustProzent");
            tableMapping.ColumnMappings.Add("UmsatzSeptember", "UmsatzSeptember");
            tableMapping.ColumnMappings.Add("MengeSeptember", "MengeSeptember");
            tableMapping.ColumnMappings.Add("RohgewinnSeptemberAbsolut", "RohgewinnSeptemberAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnSeptemberProzent", "RohgewinnSeptemberProzent");
            tableMapping.ColumnMappings.Add("UmsatzOktober", "UmsatzOktober");
            tableMapping.ColumnMappings.Add("MengeOktober", "MengeOktober");
            tableMapping.ColumnMappings.Add("RohgewinnOktoberAbsolut", "RohgewinnOktoberAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnOktoberProzent", "RohgewinnOktoberProzent");
            tableMapping.ColumnMappings.Add("UmsatzNovember", "UmsatzNovember");
            tableMapping.ColumnMappings.Add("MengeNovember", "MengeNovember");
            tableMapping.ColumnMappings.Add("RohgewinnNovemberAbsolut", "RohgewinnNovemberAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnNovemberProzent", "RohgewinnNovemberProzent");
            tableMapping.ColumnMappings.Add("UmsatzDezember", "UmsatzDezember");
            tableMapping.ColumnMappings.Add("MengeDezember", "MengeDezember");
            tableMapping.ColumnMappings.Add("RohgewinnDezemberAbsolut", "RohgewinnDezemberAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnDezemberProzent", "RohgewinnDezemberProzent");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Jahr, Kundennummer, UmsatzJanuar, MengeJanuar, RohgewinnJanuarAbsolut, RohgewinnJanuarProzent, UmsatzFebruar, MengeFebruar, RohgewinnFebruarAbsolut, RohgewinnFebruarProzent, UmsatzMaerz, 
                         MengeMaerz, RohgewinnMaerzAbsolut, RohgewinnMaerzProzent, UmsatzApril, MengeApril, RohgewinnAprilAbsolut, RohgewinnAprilProzent, UmsatzMai, MengeMai, RohgewinnMaiAbsolut, 
                         RohgewinnMaiProzent, UmsatzJuni, MengeJuni, RohgewinnJuniAbsolut, RohgewinnJuniProzent, UmsatzJuli, MengeJuli, RohgewinnJuliAbsolut, RohgewinnJuliProzent, UmsatzAugust, MengeAugust, 
                         RohgewinnAugustAbsolut, RohgewinnAugustProzent, UmsatzSeptember, MengeSeptember, RohgewinnSeptemberAbsolut, RohgewinnSeptemberProzent, UmsatzOktober, MengeOktober, 
                         RohgewinnOktoberAbsolut, RohgewinnOktoberProzent, UmsatzNovember, MengeNovember, RohgewinnNovemberAbsolut, RohgewinnNovemberProzent, UmsatzDezember, MengeDezember, 
                         RohgewinnDezemberAbsolut, RohgewinnDezemberProzent
FROM            vkundenumsatzbasis";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.SalesStatsBaseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSales.SalesStatsBaseDataTable dataTable = new dsSales.SalesStatsBaseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taSalesStats : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taSalesStats() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SalesStats";
            tableMapping.ColumnMappings.Add("Kundennummer", "Kundennummer");
            tableMapping.ColumnMappings.Add("Datum", "Datum");
            tableMapping.ColumnMappings.Add("Umsatz", "Umsatz");
            tableMapping.ColumnMappings.Add("Menge", "Menge");
            tableMapping.ColumnMappings.Add("RohgewinnAbsolut", "RohgewinnAbsolut");
            tableMapping.ColumnMappings.Add("RohgewinnProzent", "RohgewinnProzent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `cpm_kundenumsatz` (`Kundennummer`, `Datum`, `Umsatz`, `Menge`, `Rohg" +
                "ewinnAbsolut`, `RohgewinnProzent`) VALUES (@p1, @p2, @p3, @p4, @p5, @p6)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "Kundennummer";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "Datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "Umsatz";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Menge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "RohgewinnAbsolut";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "RohgewinnProzent";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Kundennummer, Datum, Umsatz, Menge, RohgewinnAbsolut, RohgewinnProz" +
                "ent\r\nFROM            cpm_kundenumsatz\r\nWHERE Kundennummer = @Kundennummer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Kundennummer";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "Kundennummer";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.SalesStatsDataTable dataTable, string Kundennummer) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Kundennummer == null)) {
                throw new global::System.ArgumentNullException("Kundennummer");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Kundennummer));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.SalesStatsDataTable GetData(string Kundennummer) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Kundennummer == null)) {
                throw new global::System.ArgumentNullException("Kundennummer");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Kundennummer));
            }
            dsSales.SalesStatsDataTable dataTable = new dsSales.SalesStatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSales.SalesStatsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSales dataSet) {
            return this.Adapter.Update(dataSet, "SalesStats");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, global::System.Nullable<global::System.DateTime> p2, global::System.Nullable<decimal> p3, global::System.Nullable<double> p4, global::System.Nullable<decimal> p5, global::System.Nullable<decimal> p6) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(p2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taAngebotSage : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taAngebotSage() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AngebotSage";
            tableMapping.ColumnMappings.Add("Nummer", "Nummer");
            tableMapping.ColumnMappings.Add("Datum", "Datum");
            tableMapping.ColumnMappings.Add("Kundennummer", "Kundennummer");
            tableMapping.ColumnMappings.Add("Vertreter1", "Vertreter1");
            tableMapping.ColumnMappings.Add("Rechnungskunde", "Rechnungskunde");
            tableMapping.ColumnMappings.Add("SummeZKD1_USt_1", "SummeZKD1_USt_1");
            tableMapping.ColumnMappings.Add("SummeZKD2_USt_1", "SummeZKD2_USt_1");
            tableMapping.ColumnMappings.Add("Bruttosumme", "Bruttosumme");
            tableMapping.ColumnMappings.Add("Roherloes", "Roherloes");
            tableMapping.ColumnMappings.Add("Gesamtrabatt", "Gesamtrabatt");
            tableMapping.ColumnMappings.Add("Ansprechpartnernummer", "Ansprechpartnernummer");
            tableMapping.ColumnMappings.Add("SteuersatzSumme1", "SteuersatzSumme1");
            tableMapping.ColumnMappings.Add("Timestamp_Datum", "Timestamp_Datum");
            tableMapping.ColumnMappings.Add("Timestamp_Zeit", "Timestamp_Zeit");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Nummer, Datum, Kundennummer, Vertreter1, Rechnung AS Rechnungskunde, Summe" +
                "ZKD1_USt_1, SummeZKD2_USt_1, Bruttosumme, Roherloes, Gesamtrabatt, Ansprechpartn" +
                "ernummer, SteuersatzSumme1, Timestamp_Datum, Timestamp_Zeit FROM angebote WHERE " +
                "Nummer <> \'\'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.AngebotSageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.AngebotSageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSales.AngebotSageDataTable dataTable = new dsSales.AngebotSageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taAngebotSagePosition : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taAngebotSagePosition() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AngebotSagePosition";
            tableMapping.ColumnMappings.Add("Sequence", "Sequence");
            tableMapping.ColumnMappings.Add("VorgangsnummerTemporaer", "VorgangsnummerTemporaer");
            tableMapping.ColumnMappings.Add("Positionstyp", "Positionstyp");
            tableMapping.ColumnMappings.Add("Positionsart", "Positionsart");
            tableMapping.ColumnMappings.Add("Artikelnummer", "Artikelnummer");
            tableMapping.ColumnMappings.Add("Stuecklistennummer", "Stuecklistennummer");
            tableMapping.ColumnMappings.Add("Bezeichnung1", "Bezeichnung1");
            tableMapping.ColumnMappings.Add("Bezeichnung2", "Bezeichnung2");
            tableMapping.ColumnMappings.Add("Hersteller", "Hersteller");
            tableMapping.ColumnMappings.Add("Menge", "Menge");
            tableMapping.ColumnMappings.Add("Einzelpreis", "Einzelpreis");
            tableMapping.ColumnMappings.Add("Gesamtpreis", "Gesamtpreis");
            tableMapping.ColumnMappings.Add("Mengeneinheit", "Mengeneinheit");
            tableMapping.ColumnMappings.Add("Langtext", "Langtext");
            tableMapping.ColumnMappings.Add("Anker_RTFMemo", "Anker_RTFMemo");
            tableMapping.ColumnMappings.Add("Zwischensumme", "Zwischensumme");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DISTINCT Sequence, VorgangsnummerTemporaer, Positionstyp, Positionsart, Artikelnummer, Stuecklistennummer, Bezeichnung1, Bezeichnung2, Hersteller, Menge / POWER(10, MengeNachkommastellen) AS Menge, Einheitspreis AS Einzelpreis, Gesamtpreis, Mengeneinheit, Langtext, Anker_RTFMemo, Zwischensumme FROM angebotepositionen";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.AngebotSagePositionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSales.AngebotSagePositionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSales.AngebotSagePositionDataTable dataTable = new dsSales.AngebotSagePositionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taSystemMemo : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public taSystemMemo() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SystemMemo";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Content", "Content");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Products.Data.Properties.Settings.Default.conLiveToSage;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Content FROM systemmemo WHERE Dateiname = \'A10202.VDT\'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSales.SystemMemoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class taQueries : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).Connection = new global::MySql.Data.MySqlClient.MySqlConnection(global::Products.Data.Properties.Settings.Default.conLiveToSage);
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).CommandText = "SELECT SUM(Rechnungsbetr_InOP_Waehrung/1.19) \r\nFROM opdebitoren\r\nWHERE (Kontonumm" +
                "er = @CustomerId) AND (Belegdatum BETWEEN @FromDate AND @ToDate)";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CustomerId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "Kontonummer";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Belegdatum";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Belegdatum";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> GetSalesTotal(string CustomerId, System.DateTime FromDate, System.DateTime ToDate) {
            global::MySql.Data.MySqlClient.MySqlCommand command = ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[0]));
            if ((CustomerId == null)) {
                throw new global::System.ArgumentNullException("CustomerId");
            }
            else {
                command.Parameters[0].Value = ((string)(CustomerId));
            }
            command.Parameters[1].Value = ((System.DateTime)(FromDate));
            command.Parameters[2].Value = ((System.DateTime)(ToDate));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private taSalesStats _taSalesStats;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public taSalesStats taSalesStats {
            get {
                return this._taSalesStats;
            }
            set {
                this._taSalesStats = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._taSalesStats != null) 
                            && (this._taSalesStats.Connection != null))) {
                    return this._taSalesStats.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._taSalesStats != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsSales dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._taSalesStats != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SalesStats.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._taSalesStats.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsSales dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._taSalesStats != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SalesStats.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._taSalesStats.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsSales dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._taSalesStats != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SalesStats.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._taSalesStats.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsSales dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._taSalesStats != null) 
                        && (this.MatchTableAdapterConnection(this._taSalesStats.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._taSalesStats != null)) {
                    revertConnections.Add(this._taSalesStats, this._taSalesStats.Connection);
                    this._taSalesStats.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._taSalesStats.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._taSalesStats.Adapter.AcceptChangesDuringUpdate) {
                        this._taSalesStats.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._taSalesStats.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._taSalesStats != null)) {
                    this._taSalesStats.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._taSalesStats]));
                    this._taSalesStats.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591